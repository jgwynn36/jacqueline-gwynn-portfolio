{"ast":null,"code":"import * as React from 'react';\nimport { tryAppendChange } from '../Functions';\nexport var CellEditor = function (props) {\n  var location = props.state.focusedLocation;\n\n  var _a = React.useState(calculatedEditorPosition(location, props.state)),\n      position = _a[0],\n      setPosition = _a[1];\n\n  React.useEffect(function () {\n    return setPosition(calculatedEditorPosition(location, props.state));\n  }, []);\n  var cellTemplate = props.state.cellTemplates[props.state.currentlyEditedCell.type];\n  return React.createElement(\"div\", {\n    className: \"rg-celleditor rg-\" + props.state.currentlyEditedCell.type + \"-celleditor\",\n    style: {\n      top: position.top + (props.state.disableFloatingCellEditor ? 0 : -1),\n      left: position.left + (props.state.disableFloatingCellEditor ? 0 : -1),\n      height: location.row.height + 1,\n      width: location.column.width + 1,\n      position: props.state.disableFloatingCellEditor ? 'absolute' : 'fixed'\n    }\n  }, cellTemplate.render(props.state.currentlyEditedCell, true, function (cell, commit) {\n    props.state.currentlyEditedCell = commit ? undefined : cell;\n    if (commit) props.state.update(function (state) {\n      return tryAppendChange(state, location, cell);\n    });\n  }));\n};\n\nvar calculatedXAxisOffset = function (location, state) {\n  var offsetLeftDistance = state.disableFloatingCellEditor ? state.viewportElement.scrollLeft - 1 : state.viewportElement.offsetLeft;\n\n  if (state.cellMatrix.frozenRightRange.first.column && location.column.idx >= state.cellMatrix.frozenRightRange.first.column.idx) {\n    return Math.min(state.cellMatrix.width, state.viewportElement.clientWidth) - state.cellMatrix.frozenRightRange.width + offsetLeftDistance;\n  } else if (location.column.idx > (state.cellMatrix.frozenLeftRange.last.column ? state.cellMatrix.frozenLeftRange.last.column.idx : state.cellMatrix.first.column.idx) || location.column.idx == state.cellMatrix.last.column.idx) {\n    return state.cellMatrix.frozenLeftRange.width - state.viewportElement.scrollLeft + offsetLeftDistance;\n  }\n\n  return offsetLeftDistance;\n};\n\nvar calculatedYAxisOffset = function (location, state) {\n  var isViewportScrollable = state.viewportElement.clientHeight !== state.cellMatrix.height;\n  var topOffsetDistance = state.disableFloatingCellEditor ? state.viewportElement.scrollTop - 1 : state.viewportElement.getBoundingClientRect().top;\n\n  if (state.cellMatrix.frozenBottomRange.first.row && location.row.idx >= state.cellMatrix.frozenBottomRange.first.row.idx) {\n    var res = topOffsetDistance - state.cellMatrix.frozenBottomRange.height + state.viewportElement.clientHeight;\n    return res;\n  } else if (location.row.idx > (state.cellMatrix.frozenTopRange.last.row ? state.cellMatrix.frozenTopRange.last.row.idx : state.cellMatrix.first.row.idx) || location.row.idx == state.cellMatrix.last.row.idx) {\n    return topOffsetDistance + state.cellMatrix.frozenTopRange.height - state.viewportElement.scrollTop;\n  }\n\n  return topOffsetDistance;\n};\n\nvar calculatedEditorPosition = function (location, state) {\n  return {\n    left: location.column.left + calculatedXAxisOffset(location, state),\n    top: location.row.top + calculatedYAxisOffset(location, state)\n  };\n};","map":{"version":3,"sources":["/Users/jacquelinegwynn/jacquelinegwynn-portfolio/node_modules/@silevis/reactgrid/dist/lib/Components/CellEditor.js"],"names":["React","tryAppendChange","CellEditor","props","location","state","focusedLocation","_a","useState","calculatedEditorPosition","position","setPosition","useEffect","cellTemplate","cellTemplates","currentlyEditedCell","type","createElement","className","style","top","disableFloatingCellEditor","left","height","row","width","column","render","cell","commit","undefined","update","calculatedXAxisOffset","offsetLeftDistance","viewportElement","scrollLeft","offsetLeft","cellMatrix","frozenRightRange","first","idx","Math","min","clientWidth","frozenLeftRange","last","calculatedYAxisOffset","isViewportScrollable","clientHeight","topOffsetDistance","scrollTop","getBoundingClientRect","frozenBottomRange","res","frozenTopRange"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { tryAppendChange } from '../Functions';\nexport var CellEditor = function (props) {\n    var location = props.state.focusedLocation;\n    var _a = React.useState(calculatedEditorPosition(location, props.state)), position = _a[0], setPosition = _a[1];\n    React.useEffect(function () { return setPosition(calculatedEditorPosition(location, props.state)); }, []);\n    var cellTemplate = props.state.cellTemplates[props.state.currentlyEditedCell.type];\n    return (React.createElement(\"div\", { className: \"rg-celleditor rg-\" + props.state.currentlyEditedCell.type + \"-celleditor\", style: {\n            top: position.top + (props.state.disableFloatingCellEditor ? 0 : -1),\n            left: position.left + (props.state.disableFloatingCellEditor ? 0 : -1),\n            height: location.row.height + 1,\n            width: location.column.width + 1,\n            position: props.state.disableFloatingCellEditor ? 'absolute' : 'fixed',\n        } }, cellTemplate.render(props.state.currentlyEditedCell, true, function (cell, commit) {\n        props.state.currentlyEditedCell = commit ? undefined : cell;\n        if (commit)\n            props.state.update(function (state) { return tryAppendChange(state, location, cell); });\n    })));\n};\nvar calculatedXAxisOffset = function (location, state) {\n    var offsetLeftDistance = state.disableFloatingCellEditor ? state.viewportElement.scrollLeft - 1 : state.viewportElement.offsetLeft;\n    if (state.cellMatrix.frozenRightRange.first.column && location.column.idx >= state.cellMatrix.frozenRightRange.first.column.idx) {\n        return Math.min(state.cellMatrix.width, state.viewportElement.clientWidth) - state.cellMatrix.frozenRightRange.width + offsetLeftDistance;\n    }\n    else if (location.column.idx > (state.cellMatrix.frozenLeftRange.last.column ? state.cellMatrix.frozenLeftRange.last.column.idx : state.cellMatrix.first.column.idx) || location.column.idx == state.cellMatrix.last.column.idx) {\n        return state.cellMatrix.frozenLeftRange.width - state.viewportElement.scrollLeft + offsetLeftDistance;\n    }\n    return offsetLeftDistance;\n};\nvar calculatedYAxisOffset = function (location, state) {\n    var isViewportScrollable = state.viewportElement.clientHeight !== state.cellMatrix.height;\n    var topOffsetDistance = state.disableFloatingCellEditor ? state.viewportElement.scrollTop - 1 : state.viewportElement.getBoundingClientRect().top;\n    if (state.cellMatrix.frozenBottomRange.first.row && location.row.idx >= state.cellMatrix.frozenBottomRange.first.row.idx) {\n        var res = topOffsetDistance - state.cellMatrix.frozenBottomRange.height + state.viewportElement.clientHeight;\n        return res;\n    }\n    else if (location.row.idx > (state.cellMatrix.frozenTopRange.last.row ? state.cellMatrix.frozenTopRange.last.row.idx : state.cellMatrix.first.row.idx) || location.row.idx == state.cellMatrix.last.row.idx) {\n        return topOffsetDistance + state.cellMatrix.frozenTopRange.height - state.viewportElement.scrollTop;\n    }\n    return topOffsetDistance;\n};\nvar calculatedEditorPosition = function (location, state) {\n    return {\n        left: location.column.left + calculatedXAxisOffset(location, state),\n        top: location.row.top + calculatedYAxisOffset(location, state)\n    };\n};\n"]},"metadata":{},"sourceType":"module"}