{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { CellMatrix } from '../Model';\nimport { updateSelectedRows, updateSelectedColumns } from './updateState';\nimport { recalcVisibleRange } from '.';\nimport { defaultCellTemplates } from './defaultCellTemplates';\nexport function getDerivedStateFromProps(props, state) {\n  if (state.props !== props) {\n    state = __assign({}, state, {\n      props: props\n    });\n  }\n\n  var dataHasChanged = !state.cellMatrix || props !== state.cellMatrix.props;\n\n  if (dataHasChanged) {\n    state = __assign({}, state, {\n      cellMatrix: new CellMatrix(props)\n    });\n  }\n\n  if (state.selectionMode === 'row' && state.selectedIds.length > 0) {\n    state = updateSelectedRows(state);\n  } else if (state.selectionMode === 'column' && state.selectedIds.length > 0) {\n    state = updateSelectedColumns(state);\n  } else {\n    state = __assign({}, state, {\n      selectedRanges: state.selectedRanges.slice().map(function (range) {\n        return state.cellMatrix.validateRange(range);\n      })\n    });\n  }\n\n  if (state.cellMatrix.columns.length > 0 && state.focusedLocation && !state.currentlyEditedCell) {\n    state = __assign({}, state, {\n      focusedLocation: state.cellMatrix.validateLocation(state.focusedLocation)\n    });\n  }\n\n  if (state.visibleRange && dataHasChanged) {\n    state = recalcVisibleRange(state);\n  }\n\n  return __assign({}, state, {\n    cellTemplates: __assign({}, defaultCellTemplates, props.customCellTemplates),\n    highlightLocations: props.highlights || [],\n    disableFillHandle: props.disableFillHandle || false,\n    disableRangeSelection: props.disableRangeSelection || false,\n    enableColumnSelection: props.enableColumnSelection || false,\n    enableRowSelection: props.enableRowSelection || false,\n    disableFloatingCellEditor: props.disableFloatingCellEditor || false\n  });\n}","map":{"version":3,"sources":["/Users/jacquelinegwynn/jacquelinegwynn-portfolio/node_modules/@silevis/reactgrid/dist/lib/Functions/getDerivedStateFromProps.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","CellMatrix","updateSelectedRows","updateSelectedColumns","recalcVisibleRange","defaultCellTemplates","getDerivedStateFromProps","props","state","dataHasChanged","cellMatrix","selectionMode","selectedIds","selectedRanges","slice","map","range","validateRange","columns","focusedLocation","currentlyEditedCell","validateLocation","visibleRange","cellTemplates","customCellTemplates","highlightLocations","highlights","disableFillHandle","disableRangeSelection","enableColumnSelection","enableRowSelection","disableFloatingCellEditor"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { CellMatrix } from '../Model';\nimport { updateSelectedRows, updateSelectedColumns } from './updateState';\nimport { recalcVisibleRange } from '.';\nimport { defaultCellTemplates } from './defaultCellTemplates';\nexport function getDerivedStateFromProps(props, state) {\n    if (state.props !== props) {\n        state = __assign({}, state, { props: props });\n    }\n    var dataHasChanged = !state.cellMatrix ||\n        props !== state.cellMatrix.props;\n    if (dataHasChanged) {\n        state = __assign({}, state, { cellMatrix: new CellMatrix(props) });\n    }\n    if (state.selectionMode === 'row' && state.selectedIds.length > 0) {\n        state = updateSelectedRows(state);\n    }\n    else if (state.selectionMode === 'column' && state.selectedIds.length > 0) {\n        state = updateSelectedColumns(state);\n    }\n    else {\n        state = __assign({}, state, { selectedRanges: state.selectedRanges.slice().map(function (range) { return state.cellMatrix.validateRange(range); }) });\n    }\n    if (state.cellMatrix.columns.length > 0 && state.focusedLocation && !state.currentlyEditedCell) {\n        state = __assign({}, state, { focusedLocation: state.cellMatrix.validateLocation(state.focusedLocation) });\n    }\n    if (state.visibleRange && dataHasChanged) {\n        state = recalcVisibleRange(state);\n    }\n    return __assign({}, state, { cellTemplates: __assign({}, defaultCellTemplates, props.customCellTemplates), highlightLocations: props.highlights || [], disableFillHandle: props.disableFillHandle || false, disableRangeSelection: props.disableRangeSelection || false, enableColumnSelection: props.enableColumnSelection || false, enableRowSelection: props.enableRowSelection || false, disableFloatingCellEditor: props.disableFloatingCellEditor || false });\n}\n"]},"metadata":{},"sourceType":"module"}