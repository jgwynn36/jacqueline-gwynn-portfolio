{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { keyCodes } from '../Functions/keyCodes';\nimport { inNumericKey, isNavigationKey, isNumpadNumericKey, isAllowedOnNumberTypingKey } from './keyCodeCheckings';\nimport { getCellProperty } from '../Functions/getCellProperty';\n\nvar NumberCellTemplate = function () {\n  function NumberCellTemplate() {\n    this.getTextFromCharCode = function (cellText) {\n      switch (cellText.charCodeAt(0)) {\n        case keyCodes.DASH:\n          return '-';\n\n        case keyCodes.COMMA:\n          return ',';\n\n        case keyCodes.PERIOD:\n        case keyCodes.DECIMAL:\n          return '.';\n\n        default:\n          return cellText;\n      }\n    };\n  }\n\n  NumberCellTemplate.prototype.getCompatibleCell = function (uncertainCell) {\n    var value = getCellProperty(uncertainCell, 'value', 'number');\n    var numberFormat = uncertainCell.format || new Intl.NumberFormat(window.navigator.language);\n    var displayValue = uncertainCell.nanToZero && Number.isNaN(value) ? 0 : value;\n    var text = Number.isNaN(displayValue) || uncertainCell.hideZero && displayValue === 0 ? '' : numberFormat.format(displayValue);\n    return __assign({}, uncertainCell, {\n      value: displayValue,\n      text: text\n    });\n  };\n\n  NumberCellTemplate.prototype.handleKeyDown = function (cell, keyCode, ctrl, shift, alt) {\n    if (isNumpadNumericKey(keyCode)) keyCode -= 48;\n    var char = String.fromCharCode(keyCode);\n\n    if (!ctrl && !alt && !shift && (inNumericKey(keyCode) || isAllowedOnNumberTypingKey(keyCode))) {\n      var value = Number(char);\n      if (Number.isNaN(value) && isAllowedOnNumberTypingKey(keyCode)) return {\n        cell: __assign({}, this.getCompatibleCell(__assign({}, cell, {\n          value: value\n        })), {\n          text: char\n        }),\n        enableEditMode: true\n      };\n      return {\n        cell: this.getCompatibleCell(__assign({}, cell, {\n          value: value\n        })),\n        enableEditMode: true\n      };\n    }\n\n    return {\n      cell: cell,\n      enableEditMode: keyCode === keyCodes.POINTER || keyCode === keyCodes.ENTER\n    };\n  };\n\n  NumberCellTemplate.prototype.update = function (cell, cellToMerge) {\n    return this.getCompatibleCell(__assign({}, cell, {\n      value: cellToMerge.value\n    }));\n  };\n\n  NumberCellTemplate.prototype.getClassName = function (cell, isInEditMode) {\n    return cell.className ? cell.className : '';\n  };\n\n  NumberCellTemplate.prototype.render = function (cell, isInEditMode, onCellChanged) {\n    var _this = this;\n\n    if (!isInEditMode) {\n      return cell.text;\n    }\n\n    var locale = cell.format ? cell.format.resolvedOptions().locale : window.navigator.languages[0];\n    var format = new Intl.NumberFormat(locale, {\n      useGrouping: false,\n      maximumFractionDigits: 20\n    });\n    return React.createElement(\"input\", {\n      ref: function (input) {\n        if (input) {\n          input.focus();\n          input.setSelectionRange(input.value.length, input.value.length);\n        }\n      },\n      defaultValue: !Number.isNaN(cell.value) && !cell.nanToZero ? format.format(cell.value) : this.getTextFromCharCode(cell.text),\n      onChange: function (e) {\n        return onCellChanged(_this.getCompatibleCell(__assign({}, cell, {\n          value: parseFloat(e.currentTarget.value.replace(/,/g, '.'))\n        })), false);\n      },\n      onBlur: function (e) {\n        return onCellChanged(_this.getCompatibleCell(__assign({}, cell, {\n          value: parseFloat(e.currentTarget.value.replace(/,/g, '.'))\n        })), true);\n      },\n      onKeyDown: function (e) {\n        if (inNumericKey(e.keyCode) || isNavigationKey(e.keyCode) || isAllowedOnNumberTypingKey(e.keyCode)) e.stopPropagation();\n        if (!inNumericKey(e.keyCode) && !isNavigationKey(e.keyCode) && !isAllowedOnNumberTypingKey(e.keyCode) || e.shiftKey) e.preventDefault();\n      },\n      onCopy: function (e) {\n        return e.stopPropagation();\n      },\n      onCut: function (e) {\n        return e.stopPropagation();\n      },\n      onPaste: function (e) {\n        return e.stopPropagation();\n      },\n      onPointerDown: function (e) {\n        return e.stopPropagation();\n      }\n    });\n  };\n\n  return NumberCellTemplate;\n}();\n\nexport { NumberCellTemplate };","map":{"version":3,"sources":["/Users/jacquelinegwynn/jacquelinegwynn-portfolio/node_modules/@silevis/reactgrid/dist/lib/CellTemplates/NumberCellTemplate.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","keyCodes","inNumericKey","isNavigationKey","isNumpadNumericKey","isAllowedOnNumberTypingKey","getCellProperty","NumberCellTemplate","getTextFromCharCode","cellText","charCodeAt","DASH","COMMA","PERIOD","DECIMAL","getCompatibleCell","uncertainCell","value","numberFormat","format","Intl","NumberFormat","window","navigator","language","displayValue","nanToZero","Number","isNaN","text","hideZero","handleKeyDown","cell","keyCode","ctrl","shift","alt","char","String","fromCharCode","enableEditMode","POINTER","ENTER","update","cellToMerge","getClassName","isInEditMode","className","render","onCellChanged","_this","locale","resolvedOptions","languages","useGrouping","maximumFractionDigits","createElement","ref","input","focus","setSelectionRange","defaultValue","onChange","e","parseFloat","currentTarget","replace","onBlur","onKeyDown","stopPropagation","shiftKey","preventDefault","onCopy","onCut","onPaste","onPointerDown"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { keyCodes } from '../Functions/keyCodes';\nimport { inNumericKey, isNavigationKey, isNumpadNumericKey, isAllowedOnNumberTypingKey } from './keyCodeCheckings';\nimport { getCellProperty } from '../Functions/getCellProperty';\nvar NumberCellTemplate = (function () {\n    function NumberCellTemplate() {\n        this.getTextFromCharCode = function (cellText) {\n            switch (cellText.charCodeAt(0)) {\n                case keyCodes.DASH:\n                    return '-';\n                case keyCodes.COMMA:\n                    return ',';\n                case keyCodes.PERIOD:\n                case keyCodes.DECIMAL:\n                    return '.';\n                default:\n                    return cellText;\n            }\n        };\n    }\n    NumberCellTemplate.prototype.getCompatibleCell = function (uncertainCell) {\n        var value = getCellProperty(uncertainCell, 'value', 'number');\n        var numberFormat = uncertainCell.format || new Intl.NumberFormat(window.navigator.language);\n        var displayValue = (uncertainCell.nanToZero && Number.isNaN(value)) ? 0 : value;\n        var text = (Number.isNaN(displayValue) || (uncertainCell.hideZero && displayValue === 0)) ? '' : numberFormat.format(displayValue);\n        return __assign({}, uncertainCell, { value: displayValue, text: text });\n    };\n    NumberCellTemplate.prototype.handleKeyDown = function (cell, keyCode, ctrl, shift, alt) {\n        if (isNumpadNumericKey(keyCode))\n            keyCode -= 48;\n        var char = String.fromCharCode(keyCode);\n        if (!ctrl && !alt && !shift && (inNumericKey(keyCode) || isAllowedOnNumberTypingKey(keyCode))) {\n            var value = Number(char);\n            if (Number.isNaN(value) && isAllowedOnNumberTypingKey(keyCode))\n                return { cell: __assign({}, this.getCompatibleCell(__assign({}, cell, { value: value })), { text: char }), enableEditMode: true };\n            return { cell: this.getCompatibleCell(__assign({}, cell, { value: value })), enableEditMode: true };\n        }\n        return { cell: cell, enableEditMode: keyCode === keyCodes.POINTER || keyCode === keyCodes.ENTER };\n    };\n    NumberCellTemplate.prototype.update = function (cell, cellToMerge) {\n        return this.getCompatibleCell(__assign({}, cell, { value: cellToMerge.value }));\n    };\n    NumberCellTemplate.prototype.getClassName = function (cell, isInEditMode) {\n        return cell.className ? cell.className : '';\n    };\n    NumberCellTemplate.prototype.render = function (cell, isInEditMode, onCellChanged) {\n        var _this = this;\n        if (!isInEditMode) {\n            return cell.text;\n        }\n        var locale = cell.format ? cell.format.resolvedOptions().locale : window.navigator.languages[0];\n        var format = new Intl.NumberFormat(locale, { useGrouping: false, maximumFractionDigits: 20 });\n        return React.createElement(\"input\", { ref: function (input) {\n                if (input) {\n                    input.focus();\n                    input.setSelectionRange(input.value.length, input.value.length);\n                }\n            }, defaultValue: (!Number.isNaN(cell.value) && !cell.nanToZero) ? format.format(cell.value) : this.getTextFromCharCode(cell.text), onChange: function (e) { return onCellChanged(_this.getCompatibleCell(__assign({}, cell, { value: parseFloat(e.currentTarget.value.replace(/,/g, '.')) })), false); }, onBlur: function (e) { return onCellChanged(_this.getCompatibleCell(__assign({}, cell, { value: parseFloat(e.currentTarget.value.replace(/,/g, '.')) })), true); }, onKeyDown: function (e) {\n                if (inNumericKey(e.keyCode) || isNavigationKey(e.keyCode) || isAllowedOnNumberTypingKey(e.keyCode))\n                    e.stopPropagation();\n                if (!inNumericKey(e.keyCode) && !isNavigationKey(e.keyCode) && !isAllowedOnNumberTypingKey(e.keyCode) || e.shiftKey)\n                    e.preventDefault();\n            }, onCopy: function (e) { return e.stopPropagation(); }, onCut: function (e) { return e.stopPropagation(); }, onPaste: function (e) { return e.stopPropagation(); }, onPointerDown: function (e) { return e.stopPropagation(); } });\n    };\n    return NumberCellTemplate;\n}());\nexport { NumberCellTemplate };\n"]},"metadata":{},"sourceType":"module"}