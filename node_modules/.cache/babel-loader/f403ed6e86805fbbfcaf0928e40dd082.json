{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { keyCodes } from '../Functions/keyCodes';\nimport { inNumericKey, isNavigationKey, isAlphaNumericKey } from './keyCodeCheckings';\nimport { getCellProperty } from '../Functions/getCellProperty';\nimport { getTimestamp, getFormattedTimeUnit } from './timeUtils';\n\nvar DateCellTemplate = function () {\n  function DateCellTemplate() {}\n\n  DateCellTemplate.prototype.getCompatibleCell = function (uncertainCell) {\n    var date = uncertainCell.date ? getCellProperty(uncertainCell, 'date', 'object') : new Date(NaN);\n    var dateFormat = uncertainCell.format || new Intl.DateTimeFormat(window.navigator.language);\n    var value = date.getTime();\n    var text = !Number.isNaN(value) ? dateFormat.format(date) : '';\n    return __assign({}, uncertainCell, {\n      date: date,\n      value: value,\n      text: text\n    });\n  };\n\n  DateCellTemplate.prototype.handleKeyDown = function (cell, keyCode, ctrl, shift, alt) {\n    if (!ctrl && !alt && isAlphaNumericKey(keyCode)) return {\n      cell: this.getCompatibleCell(__assign({}, cell)),\n      enableEditMode: true\n    };\n    return {\n      cell: cell,\n      enableEditMode: keyCode === keyCodes.POINTER || keyCode === keyCodes.ENTER\n    };\n  };\n\n  DateCellTemplate.prototype.update = function (cell, cellToMerge) {\n    return this.getCompatibleCell(__assign({}, cell, {\n      date: new Date(cellToMerge.value)\n    }));\n  };\n\n  DateCellTemplate.prototype.getClassName = function (cell, isInEditMode) {\n    return cell.className ? cell.className : '';\n  };\n\n  DateCellTemplate.prototype.render = function (cell, isInEditMode, onCellChanged) {\n    var _this = this;\n\n    if (!isInEditMode) return cell.text;\n    var year = getFormattedTimeUnit(cell.date.getFullYear());\n    var month = getFormattedTimeUnit(cell.date.getMonth() + 1);\n    var day = getFormattedTimeUnit(cell.date.getDate());\n    return React.createElement(\"input\", {\n      ref: function (input) {\n        if (input) input.focus();\n      },\n      type: \"date\",\n      defaultValue: year + \"-\" + month + \"-\" + day,\n      onChange: function (e) {\n        var timestamp = getTimestamp(e.currentTarget.value, '');\n\n        if (!Number.isNaN(timestamp)) {\n          var date = new Date(timestamp);\n          onCellChanged(_this.getCompatibleCell(__assign({}, cell, {\n            date: date\n          })), false);\n        }\n      },\n      onBlur: function (e) {\n        var timestamp = getTimestamp(e.currentTarget.value, '');\n\n        if (!Number.isNaN(timestamp)) {\n          var date = new Date(timestamp);\n          onCellChanged(_this.getCompatibleCell(__assign({}, cell, {\n            date: date\n          })), true);\n        }\n      },\n      onKeyDown: function (e) {\n        if (inNumericKey(e.keyCode) || isNavigationKey(e.keyCode) || e.keyCode === keyCodes.COMMA || e.keyCode === keyCodes.PERIOD) e.stopPropagation();\n        if (!inNumericKey(e.keyCode) && !isNavigationKey(e.keyCode) && e.keyCode !== keyCodes.COMMA && e.keyCode !== keyCodes.PERIOD) e.preventDefault();\n      },\n      onCopy: function (e) {\n        return e.stopPropagation();\n      },\n      onCut: function (e) {\n        return e.stopPropagation();\n      },\n      onPaste: function (e) {\n        return e.stopPropagation();\n      },\n      onPointerDown: function (e) {\n        return e.stopPropagation();\n      }\n    });\n  };\n\n  return DateCellTemplate;\n}();\n\nexport { DateCellTemplate };","map":{"version":3,"sources":["/Users/jacquelinegwynn/jacquelinegwynn-portfolio/node_modules/@silevis/reactgrid/dist/lib/CellTemplates/DateCellTemplate.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","keyCodes","inNumericKey","isNavigationKey","isAlphaNumericKey","getCellProperty","getTimestamp","getFormattedTimeUnit","DateCellTemplate","getCompatibleCell","uncertainCell","date","Date","NaN","dateFormat","format","Intl","DateTimeFormat","window","navigator","language","value","getTime","text","Number","isNaN","handleKeyDown","cell","keyCode","ctrl","shift","alt","enableEditMode","POINTER","ENTER","update","cellToMerge","getClassName","isInEditMode","className","render","onCellChanged","_this","year","getFullYear","month","getMonth","day","getDate","createElement","ref","input","focus","type","defaultValue","onChange","e","timestamp","currentTarget","onBlur","onKeyDown","COMMA","PERIOD","stopPropagation","preventDefault","onCopy","onCut","onPaste","onPointerDown"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { keyCodes } from '../Functions/keyCodes';\nimport { inNumericKey, isNavigationKey, isAlphaNumericKey } from './keyCodeCheckings';\nimport { getCellProperty } from '../Functions/getCellProperty';\nimport { getTimestamp, getFormattedTimeUnit } from './timeUtils';\nvar DateCellTemplate = (function () {\n    function DateCellTemplate() {\n    }\n    DateCellTemplate.prototype.getCompatibleCell = function (uncertainCell) {\n        var date = uncertainCell.date ? getCellProperty(uncertainCell, 'date', 'object') : new Date(NaN);\n        var dateFormat = uncertainCell.format || new Intl.DateTimeFormat(window.navigator.language);\n        var value = date.getTime();\n        var text = !Number.isNaN(value) ? dateFormat.format(date) : '';\n        return __assign({}, uncertainCell, { date: date, value: value, text: text });\n    };\n    DateCellTemplate.prototype.handleKeyDown = function (cell, keyCode, ctrl, shift, alt) {\n        if (!ctrl && !alt && isAlphaNumericKey(keyCode))\n            return { cell: this.getCompatibleCell(__assign({}, cell)), enableEditMode: true };\n        return { cell: cell, enableEditMode: keyCode === keyCodes.POINTER || keyCode === keyCodes.ENTER };\n    };\n    DateCellTemplate.prototype.update = function (cell, cellToMerge) {\n        return this.getCompatibleCell(__assign({}, cell, { date: new Date(cellToMerge.value) }));\n    };\n    DateCellTemplate.prototype.getClassName = function (cell, isInEditMode) {\n        return cell.className ? cell.className : '';\n    };\n    DateCellTemplate.prototype.render = function (cell, isInEditMode, onCellChanged) {\n        var _this = this;\n        if (!isInEditMode)\n            return cell.text;\n        var year = getFormattedTimeUnit(cell.date.getFullYear());\n        var month = getFormattedTimeUnit(cell.date.getMonth() + 1);\n        var day = getFormattedTimeUnit(cell.date.getDate());\n        return React.createElement(\"input\", { ref: function (input) {\n                if (input)\n                    input.focus();\n            }, type: \"date\", defaultValue: year + \"-\" + month + \"-\" + day, onChange: function (e) {\n                var timestamp = getTimestamp(e.currentTarget.value, '');\n                if (!Number.isNaN(timestamp)) {\n                    var date = new Date(timestamp);\n                    onCellChanged(_this.getCompatibleCell(__assign({}, cell, { date: date })), false);\n                }\n            }, onBlur: function (e) {\n                var timestamp = getTimestamp(e.currentTarget.value, '');\n                if (!Number.isNaN(timestamp)) {\n                    var date = new Date(timestamp);\n                    onCellChanged(_this.getCompatibleCell(__assign({}, cell, { date: date })), true);\n                }\n            }, onKeyDown: function (e) {\n                if (inNumericKey(e.keyCode) || isNavigationKey(e.keyCode) || (e.keyCode === keyCodes.COMMA || e.keyCode === keyCodes.PERIOD))\n                    e.stopPropagation();\n                if (!inNumericKey(e.keyCode) && !isNavigationKey(e.keyCode) && (e.keyCode !== keyCodes.COMMA && e.keyCode !== keyCodes.PERIOD))\n                    e.preventDefault();\n            }, onCopy: function (e) { return e.stopPropagation(); }, onCut: function (e) { return e.stopPropagation(); }, onPaste: function (e) { return e.stopPropagation(); }, onPointerDown: function (e) { return e.stopPropagation(); } });\n    };\n    return DateCellTemplate;\n}());\nexport { DateCellTemplate };\n"]},"metadata":{},"sourceType":"module"}