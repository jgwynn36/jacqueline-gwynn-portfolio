{"ast":null,"code":"export function getLocationFromClient(state, clientX, clientY, favorScrollableContent) {\n  var viewportX = clientX - state.viewportElement.getBoundingClientRect().left;\n  var viewportY = clientY - state.viewportElement.getBoundingClientRect().top;\n\n  var _a = getRow(state, viewportY, favorScrollableContent === 'vertical' || favorScrollableContent === 'both'),\n      cellY = _a.cellY,\n      row = _a.row;\n\n  var _b = getColumn(state, viewportX, favorScrollableContent === 'horizontal' || favorScrollableContent === 'both'),\n      cellX = _b.cellX,\n      column = _b.column;\n\n  return {\n    row: row,\n    column: column,\n    viewportX: viewportX,\n    viewportY: viewportY,\n    cellX: cellX,\n    cellY: cellY\n  };\n}\n\nfunction getRow(state, viewportY, favorScrollableContent) {\n  var cellMatrix = state.cellMatrix;\n  var visibleContentHeight = Math.min(state.viewportElement.clientHeight, cellMatrix.height);\n  var bottomPaneTop = visibleContentHeight - cellMatrix.frozenBottomRange.height;\n  var scrollTop = state.viewportElement.scrollTop;\n  var maxScrollTop = cellMatrix.scrollableRange.height - visibleContentHeight + cellMatrix.frozenTopRange.height + cellMatrix.frozenBottomRange.height - 1;\n\n  if (cellMatrix.frozenTopRange.rows.find(function (row) {\n    return row.bottom > viewportY;\n  }) && viewportY < cellMatrix.frozenTopRange.height && !(favorScrollableContent && scrollTop > 0)) {\n    var row = cellMatrix.frozenTopRange.rows.find(function (row) {\n      return row.bottom > viewportY;\n    });\n    return {\n      cellY: viewportY - row.top,\n      row: row\n    };\n  } else if (cellMatrix.frozenBottomRange.rows && viewportY >= bottomPaneTop && !(favorScrollableContent && scrollTop < maxScrollTop)) {\n    var row = cellMatrix.frozenBottomRange.rows.find(function (row) {\n      return row.bottom > viewportY - bottomPaneTop;\n    }) || cellMatrix.last.row;\n    return {\n      cellY: viewportY - bottomPaneTop - row.top,\n      row: row\n    };\n  } else {\n    var scrollableContentY_1 = viewportY - cellMatrix.frozenTopRange.height + state.viewportElement.scrollTop;\n    var row = cellMatrix.scrollableRange.rows.find(function (row) {\n      return row.bottom >= scrollableContentY_1;\n    }) || cellMatrix.scrollableRange.last.row;\n    return {\n      cellY: scrollableContentY_1 - row.top,\n      row: row\n    };\n  }\n}\n\nfunction getColumn(state, viewportX, favorScrollableContent) {\n  var cellMatrix = state.cellMatrix;\n  var visibleContentWidth = Math.min(state.viewportElement.clientWidth, cellMatrix.width);\n  var rightPaneLeft = visibleContentWidth - cellMatrix.frozenRightRange.width;\n  var scrollLeft = state.viewportElement.scrollLeft;\n  var maxScrollLeft = cellMatrix.scrollableRange.width - visibleContentWidth + cellMatrix.frozenLeftRange.width + cellMatrix.frozenRightRange.width - 1;\n\n  if (cellMatrix.frozenLeftRange.columns.find(function (col) {\n    return col.right > viewportX;\n  }) && viewportX < cellMatrix.frozenLeftRange.width && !(favorScrollableContent && scrollLeft > 0)) {\n    var column = cellMatrix.frozenLeftRange.columns.find(function (col) {\n      return col.right > viewportX;\n    });\n    return {\n      cellX: viewportX - column.left,\n      column: column\n    };\n  } else if (cellMatrix.frozenRightRange.columns && viewportX >= rightPaneLeft && !(favorScrollableContent && scrollLeft < maxScrollLeft)) {\n    var column = cellMatrix.frozenRightRange.columns.find(function (col) {\n      return col.right > viewportX - rightPaneLeft;\n    }) || cellMatrix.last.column;\n    return {\n      cellX: viewportX - rightPaneLeft - column.left,\n      column: column\n    };\n  } else {\n    var scrollableContentX_1 = viewportX - cellMatrix.frozenLeftRange.width + scrollLeft;\n    var column = cellMatrix.scrollableRange.columns.find(function (col) {\n      return col.right >= scrollableContentX_1;\n    }) || cellMatrix.scrollableRange.last.column;\n    return {\n      cellX: scrollableContentX_1 - column.left,\n      column: column\n    };\n  }\n}","map":{"version":3,"sources":["/Users/jacquelinegwynn/jacquelinegwynn-portfolio/node_modules/@silevis/reactgrid/dist/lib/Functions/getLocationFromClient.js"],"names":["getLocationFromClient","state","clientX","clientY","favorScrollableContent","viewportX","viewportElement","getBoundingClientRect","left","viewportY","top","_a","getRow","cellY","row","_b","getColumn","cellX","column","cellMatrix","visibleContentHeight","Math","min","clientHeight","height","bottomPaneTop","frozenBottomRange","scrollTop","maxScrollTop","scrollableRange","frozenTopRange","rows","find","bottom","last","scrollableContentY_1","visibleContentWidth","clientWidth","width","rightPaneLeft","frozenRightRange","scrollLeft","maxScrollLeft","frozenLeftRange","columns","col","right","scrollableContentX_1"],"mappings":"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","sourcesContent":["export function getLocationFromClient(state, clientX, clientY, favorScrollableContent) {\n    var viewportX = clientX - state.viewportElement.getBoundingClientRect().left;\n    var viewportY = clientY - state.viewportElement.getBoundingClientRect().top;\n    var _a = getRow(state, viewportY, favorScrollableContent === 'vertical' || favorScrollableContent === 'both'), cellY = _a.cellY, row = _a.row;\n    var _b = getColumn(state, viewportX, favorScrollableContent === 'horizontal' || favorScrollableContent === 'both'), cellX = _b.cellX, column = _b.column;\n    return { row: row, column: column, viewportX: viewportX, viewportY: viewportY, cellX: cellX, cellY: cellY };\n}\nfunction getRow(state, viewportY, favorScrollableContent) {\n    var cellMatrix = state.cellMatrix;\n    var visibleContentHeight = Math.min(state.viewportElement.clientHeight, cellMatrix.height);\n    var bottomPaneTop = visibleContentHeight - cellMatrix.frozenBottomRange.height;\n    var scrollTop = state.viewportElement.scrollTop;\n    var maxScrollTop = cellMatrix.scrollableRange.height - visibleContentHeight + cellMatrix.frozenTopRange.height + cellMatrix.frozenBottomRange.height - 1;\n    if (cellMatrix.frozenTopRange.rows.find(function (row) { return row.bottom > viewportY; }) && viewportY < cellMatrix.frozenTopRange.height && !(favorScrollableContent && scrollTop > 0)) {\n        var row = cellMatrix.frozenTopRange.rows.find(function (row) { return row.bottom > viewportY; });\n        return { cellY: viewportY - row.top, row: row };\n    }\n    else if (cellMatrix.frozenBottomRange.rows && viewportY >= bottomPaneTop && !(favorScrollableContent && scrollTop < maxScrollTop)) {\n        var row = cellMatrix.frozenBottomRange.rows.find(function (row) { return row.bottom > viewportY - bottomPaneTop; }) || cellMatrix.last.row;\n        return { cellY: viewportY - bottomPaneTop - row.top, row: row };\n    }\n    else {\n        var scrollableContentY_1 = viewportY - cellMatrix.frozenTopRange.height + state.viewportElement.scrollTop;\n        var row = cellMatrix.scrollableRange.rows.find(function (row) { return row.bottom >= scrollableContentY_1; }) || cellMatrix.scrollableRange.last.row;\n        return { cellY: scrollableContentY_1 - row.top, row: row };\n    }\n}\nfunction getColumn(state, viewportX, favorScrollableContent) {\n    var cellMatrix = state.cellMatrix;\n    var visibleContentWidth = Math.min(state.viewportElement.clientWidth, cellMatrix.width);\n    var rightPaneLeft = visibleContentWidth - cellMatrix.frozenRightRange.width;\n    var scrollLeft = state.viewportElement.scrollLeft;\n    var maxScrollLeft = cellMatrix.scrollableRange.width - visibleContentWidth + cellMatrix.frozenLeftRange.width + cellMatrix.frozenRightRange.width - 1;\n    if (cellMatrix.frozenLeftRange.columns.find(function (col) { return col.right > viewportX; }) && viewportX < cellMatrix.frozenLeftRange.width && !(favorScrollableContent && scrollLeft > 0)) {\n        var column = cellMatrix.frozenLeftRange.columns.find(function (col) { return col.right > viewportX; });\n        return { cellX: viewportX - column.left, column: column };\n    }\n    else if (cellMatrix.frozenRightRange.columns && viewportX >= rightPaneLeft && !(favorScrollableContent && scrollLeft < maxScrollLeft)) {\n        var column = cellMatrix.frozenRightRange.columns.find(function (col) { return col.right > viewportX - rightPaneLeft; }) || cellMatrix.last.column;\n        return { cellX: viewportX - rightPaneLeft - column.left, column: column };\n    }\n    else {\n        var scrollableContentX_1 = viewportX - cellMatrix.frozenLeftRange.width + scrollLeft;\n        var column = cellMatrix.scrollableRange.columns.find(function (col) { return col.right >= scrollableContentX_1; }) || cellMatrix.scrollableRange.last.column;\n        return { cellX: scrollableContentX_1 - column.left, column: column };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}