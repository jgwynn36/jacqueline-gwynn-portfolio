{"ast":null,"code":"import { isBrowserIE, isBrowserEdge } from '../Functions';\nimport { ResizeColumnBehavior } from '../Behaviors/ResizeColumnBehavior';\nexport function scrollIntoView(state, location, direction) {\n  if (direction === void 0) {\n    direction = 'both';\n  }\n\n  var top = getScrollTop(state, location, direction === 'horizontal');\n  var left = getScrollLeft(state, location, direction === 'vertical');\n\n  if (isBrowserIE() || isBrowserEdge()) {\n    state.hiddenScrollableElement.scrollTop = top;\n    state.hiddenScrollableElement.scrollLeft = left;\n  } else {\n    state.viewportElement.scrollTop = top;\n    state.viewportElement.scrollLeft = left;\n  }\n}\n\nfunction getScrollTop(state, location, dontChange) {\n  var row = location.row;\n  var _a = state.viewportElement,\n      scrollTop = _a.scrollTop,\n      clientHeight = _a.clientHeight;\n  var _b = state.cellMatrix,\n      frozenTopRange = _b.frozenTopRange,\n      frozenBottomRange = _b.frozenBottomRange,\n      rows = _b.rows;\n  if (dontChange || !row) return scrollTop;\n  var visibleContentHeight = Math.min(clientHeight, state.cellMatrix.height);\n  var visibleScrollAreaHeight = visibleContentHeight - frozenTopRange.height - frozenBottomRange.height;\n\n  var hasTopFrozens = function () {\n    return frozenTopRange.rows.length > 0;\n  };\n\n  var hasBottomFrozens = function () {\n    return frozenBottomRange.rows.length > 0;\n  };\n\n  var isFocusLocationOnTopFrozen = function () {\n    return hasTopFrozens() && row.idx <= frozenTopRange.last.row.idx;\n  };\n\n  var isFocusLocationOnBottomFrozen = function () {\n    return hasBottomFrozens() && row.idx >= frozenBottomRange.first.row.idx;\n  };\n\n  if (isFocusLocationOnTopFrozen() || isFocusLocationOnBottomFrozen()) {\n    return scrollTop;\n  }\n\n  var isBottomRowFrozen = function () {\n    return frozenBottomRange.rows.some(function (r) {\n      return row.idx === r.idx;\n    });\n  };\n\n  var isRowBelowBottomPane = function () {\n    return row.bottom > visibleScrollAreaHeight + scrollTop;\n  };\n\n  var isRowBelowTopPane = function () {\n    return row.top < scrollTop && !isBottomRowFrozen();\n  };\n\n  var isLastRow = function () {\n    return state.cellMatrix.last.row.idx === row.idx;\n  };\n\n  var shouldScrollToTop = function () {\n    return row.top + (location.cellY ? location.cellY : 0) < scrollTop + 1 && !isLastRow() && !isFocusLocationOnBottomFrozen() || isFocusLocationOnTopFrozen() || isRowBelowTopPane();\n  };\n\n  var shouldScrollToBottom = function () {\n    return (location.cellY ? row.top + location.cellY : row.bottom) > visibleScrollAreaHeight + scrollTop - 4 || isFocusLocationOnBottomFrozen() || isLastRow() || isRowBelowBottomPane();\n  };\n\n  if (shouldScrollToTop()) {\n    if (hasTopFrozens() || !location.cellY) {\n      return row.top - 1;\n    } else {\n      return rows[row.idx].top - 1;\n    }\n  }\n\n  if (shouldScrollToBottom()) {\n    if (hasBottomFrozens() || location.cellY) {\n      return rows[row.idx].bottom - visibleScrollAreaHeight + 1;\n    } else {\n      return row.bottom - visibleScrollAreaHeight + 1;\n    }\n  }\n\n  return scrollTop;\n}\n\nfunction getScrollLeft(state, location, dontChange) {\n  var column = location.column;\n  var _a = state.viewportElement,\n      scrollLeft = _a.scrollLeft,\n      clientWidth = _a.clientWidth;\n  var _b = state.cellMatrix,\n      frozenLeftRange = _b.frozenLeftRange,\n      frozenRightRange = _b.frozenRightRange,\n      cols = _b.columns;\n  if (dontChange || !column) return scrollLeft;\n  var visibleContentWidth = Math.min(clientWidth, state.cellMatrix.width);\n  var visibleScrollAreaWidth = visibleContentWidth - frozenLeftRange.width - frozenRightRange.width;\n\n  var hasLeftFrozens = function () {\n    return frozenLeftRange.columns.length > 0;\n  };\n\n  var hasRightFrozens = function () {\n    return frozenRightRange.columns.length > 0;\n  };\n\n  var isFocusLocationOnLeftFrozen = function () {\n    return hasLeftFrozens() && column.idx <= frozenLeftRange.last.column.idx;\n  };\n\n  var isFocusLocationOnRightFrozen = function () {\n    return hasRightFrozens() && column.idx >= frozenRightRange.first.column.idx;\n  };\n\n  var isColumnResizing = function () {\n    return state.currentBehavior instanceof ResizeColumnBehavior;\n  };\n\n  if (isFocusLocationOnLeftFrozen() || isFocusLocationOnRightFrozen() || isColumnResizing()) {\n    return scrollLeft;\n  }\n\n  var isRightColumnFrozen = function () {\n    return frozenRightRange.columns.some(function (r) {\n      return column.idx === r.idx;\n    });\n  };\n\n  var isColumnBelowRightPane = function () {\n    return column.right > visibleScrollAreaWidth + scrollLeft;\n  };\n\n  var isColumnBelowLeftPane = function () {\n    return column.left < scrollLeft && !isRightColumnFrozen();\n  };\n\n  var isLastColumn = function () {\n    return state.cellMatrix.last.column.idx === column.idx;\n  };\n\n  var shouldScrollToLeft = function () {\n    return column.left + (location.cellX ? location.cellX : 0) < scrollLeft + 1 && !isLastColumn() && !isFocusLocationOnRightFrozen() || isFocusLocationOnLeftFrozen() || isColumnBelowLeftPane();\n  };\n\n  var shouldScrollToRight = function () {\n    return (location.cellX ? column.left + location.cellX : column.right) > visibleScrollAreaWidth + scrollLeft - 4 || isFocusLocationOnRightFrozen() || isLastColumn() || isColumnBelowRightPane();\n  };\n\n  if (shouldScrollToLeft()) {\n    if (hasLeftFrozens() || !location.cellX) {\n      return column.left - 1;\n    } else {\n      return cols[column.idx].left - 1;\n    }\n  }\n\n  if (shouldScrollToRight()) {\n    if (hasRightFrozens() || location.cellX) {\n      return cols[column.idx].right - visibleScrollAreaWidth + 1;\n    } else {\n      return column.right - visibleScrollAreaWidth + 1;\n    }\n  }\n\n  return scrollLeft;\n}","map":{"version":3,"sources":["/Users/jacquelinegwynn/jacquelinegwynn-portfolio/node_modules/@silevis/reactgrid/dist/lib/Functions/scrollIntoView.js"],"names":["isBrowserIE","isBrowserEdge","ResizeColumnBehavior","scrollIntoView","state","location","direction","top","getScrollTop","left","getScrollLeft","hiddenScrollableElement","scrollTop","scrollLeft","viewportElement","dontChange","row","_a","clientHeight","_b","cellMatrix","frozenTopRange","frozenBottomRange","rows","visibleContentHeight","Math","min","height","visibleScrollAreaHeight","hasTopFrozens","length","hasBottomFrozens","isFocusLocationOnTopFrozen","idx","last","isFocusLocationOnBottomFrozen","first","isBottomRowFrozen","some","r","isRowBelowBottomPane","bottom","isRowBelowTopPane","isLastRow","shouldScrollToTop","cellY","shouldScrollToBottom","column","clientWidth","frozenLeftRange","frozenRightRange","cols","columns","visibleContentWidth","width","visibleScrollAreaWidth","hasLeftFrozens","hasRightFrozens","isFocusLocationOnLeftFrozen","isFocusLocationOnRightFrozen","isColumnResizing","currentBehavior","isRightColumnFrozen","isColumnBelowRightPane","right","isColumnBelowLeftPane","isLastColumn","shouldScrollToLeft","cellX","shouldScrollToRight"],"mappings":"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","sourcesContent":["import { isBrowserIE, isBrowserEdge } from '../Functions';\nimport { ResizeColumnBehavior } from '../Behaviors/ResizeColumnBehavior';\nexport function scrollIntoView(state, location, direction) {\n    if (direction === void 0) { direction = 'both'; }\n    var top = getScrollTop(state, location, direction === 'horizontal');\n    var left = getScrollLeft(state, location, direction === 'vertical');\n    if (isBrowserIE() || isBrowserEdge()) {\n        state.hiddenScrollableElement.scrollTop = top;\n        state.hiddenScrollableElement.scrollLeft = left;\n    }\n    else {\n        state.viewportElement.scrollTop = top;\n        state.viewportElement.scrollLeft = left;\n    }\n}\nfunction getScrollTop(state, location, dontChange) {\n    var row = location.row;\n    var _a = state.viewportElement, scrollTop = _a.scrollTop, clientHeight = _a.clientHeight;\n    var _b = state.cellMatrix, frozenTopRange = _b.frozenTopRange, frozenBottomRange = _b.frozenBottomRange, rows = _b.rows;\n    if (dontChange || !row)\n        return scrollTop;\n    var visibleContentHeight = Math.min(clientHeight, state.cellMatrix.height);\n    var visibleScrollAreaHeight = visibleContentHeight - frozenTopRange.height - frozenBottomRange.height;\n    var hasTopFrozens = function () { return frozenTopRange.rows.length > 0; };\n    var hasBottomFrozens = function () { return frozenBottomRange.rows.length > 0; };\n    var isFocusLocationOnTopFrozen = function () { return hasTopFrozens() && row.idx <= frozenTopRange.last.row.idx; };\n    var isFocusLocationOnBottomFrozen = function () { return hasBottomFrozens() && row.idx >= frozenBottomRange.first.row.idx; };\n    if (isFocusLocationOnTopFrozen() || isFocusLocationOnBottomFrozen()) {\n        return scrollTop;\n    }\n    var isBottomRowFrozen = function () { return frozenBottomRange.rows.some(function (r) { return row.idx === r.idx; }); };\n    var isRowBelowBottomPane = function () { return row.bottom > visibleScrollAreaHeight + scrollTop; };\n    var isRowBelowTopPane = function () { return row.top < scrollTop && !isBottomRowFrozen(); };\n    var isLastRow = function () { return state.cellMatrix.last.row.idx === row.idx; };\n    var shouldScrollToTop = function () { return row.top + (location.cellY ? location.cellY : 0) < scrollTop + 1 && !isLastRow() &&\n        !isFocusLocationOnBottomFrozen() || isFocusLocationOnTopFrozen() || isRowBelowTopPane(); };\n    var shouldScrollToBottom = function () { return (location.cellY ? row.top + location.cellY : row.bottom) > visibleScrollAreaHeight + scrollTop - 4 ||\n        isFocusLocationOnBottomFrozen() || isLastRow() || isRowBelowBottomPane(); };\n    if (shouldScrollToTop()) {\n        if (hasTopFrozens() || !location.cellY) {\n            return row.top - 1;\n        }\n        else {\n            return rows[row.idx].top - 1;\n        }\n    }\n    if (shouldScrollToBottom()) {\n        if (hasBottomFrozens() || location.cellY) {\n            return rows[row.idx].bottom - visibleScrollAreaHeight + 1;\n        }\n        else {\n            return row.bottom - visibleScrollAreaHeight + 1;\n        }\n    }\n    return scrollTop;\n}\nfunction getScrollLeft(state, location, dontChange) {\n    var column = location.column;\n    var _a = state.viewportElement, scrollLeft = _a.scrollLeft, clientWidth = _a.clientWidth;\n    var _b = state.cellMatrix, frozenLeftRange = _b.frozenLeftRange, frozenRightRange = _b.frozenRightRange, cols = _b.columns;\n    if (dontChange || !column)\n        return scrollLeft;\n    var visibleContentWidth = Math.min(clientWidth, state.cellMatrix.width);\n    var visibleScrollAreaWidth = visibleContentWidth - frozenLeftRange.width - frozenRightRange.width;\n    var hasLeftFrozens = function () { return frozenLeftRange.columns.length > 0; };\n    var hasRightFrozens = function () { return frozenRightRange.columns.length > 0; };\n    var isFocusLocationOnLeftFrozen = function () { return hasLeftFrozens() && column.idx <= frozenLeftRange.last.column.idx; };\n    var isFocusLocationOnRightFrozen = function () { return hasRightFrozens() && column.idx >= frozenRightRange.first.column.idx; };\n    var isColumnResizing = function () { return state.currentBehavior instanceof ResizeColumnBehavior; };\n    if (isFocusLocationOnLeftFrozen() || isFocusLocationOnRightFrozen() || isColumnResizing()) {\n        return scrollLeft;\n    }\n    var isRightColumnFrozen = function () { return frozenRightRange.columns.some(function (r) { return column.idx === r.idx; }); };\n    var isColumnBelowRightPane = function () { return column.right > visibleScrollAreaWidth + scrollLeft; };\n    var isColumnBelowLeftPane = function () { return column.left < scrollLeft && !isRightColumnFrozen(); };\n    var isLastColumn = function () { return state.cellMatrix.last.column.idx === column.idx; };\n    var shouldScrollToLeft = function () { return column.left + (location.cellX ? location.cellX : 0) < scrollLeft + 1 && !isLastColumn() &&\n        !isFocusLocationOnRightFrozen() || isFocusLocationOnLeftFrozen() || isColumnBelowLeftPane(); };\n    var shouldScrollToRight = function () { return (location.cellX ? column.left + location.cellX : column.right) > visibleScrollAreaWidth + scrollLeft - 4 ||\n        isFocusLocationOnRightFrozen() || isLastColumn() || isColumnBelowRightPane(); };\n    if (shouldScrollToLeft()) {\n        if (hasLeftFrozens() || !location.cellX) {\n            return column.left - 1;\n        }\n        else {\n            return cols[column.idx].left - 1;\n        }\n    }\n    if (shouldScrollToRight()) {\n        if (hasRightFrozens() || location.cellX) {\n            return cols[column.idx].right - visibleScrollAreaWidth + 1;\n        }\n        else {\n            return column.right - visibleScrollAreaWidth + 1;\n        }\n    }\n    return scrollLeft;\n}\n"]},"metadata":{},"sourceType":"module"}