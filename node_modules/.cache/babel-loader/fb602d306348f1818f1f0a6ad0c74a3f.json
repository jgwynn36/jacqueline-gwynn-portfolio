{"ast":null,"code":"import * as React from 'react';\nimport { isBrowserSafari } from '../Functions/safari';\nexport var HiddenElement = function (props) {\n  var styles = {};\n\n  if (isBrowserSafari() && props.state.viewportElement && props.state.viewportElement.clientHeight !== props.state.cellMatrix.height) {\n    var _a = props.state.viewportElement,\n        clientHeight = _a.clientHeight,\n        clientWidth = _a.clientWidth,\n        scrollTop = _a.scrollTop,\n        scrollLeft = _a.scrollLeft;\n    var _b = props.state.cellMatrix,\n        cellMatrixHeight = _b.height,\n        cellMatrixWidth = _b.width;\n    styles = {\n      position: 'absolute',\n      height: clientHeight,\n      width: clientWidth,\n      zIndex: -1,\n      top: scrollTop + clientHeight > cellMatrixHeight ? cellMatrixHeight - clientHeight : scrollTop,\n      left: scrollLeft + clientWidth > cellMatrixWidth ? cellMatrixWidth - clientWidth : scrollLeft\n    };\n  }\n\n  return React.createElement(\"input\", {\n    className: \"rg-hidden-element\",\n    style: styles,\n    readOnly: true,\n    ref: props.hiddenElementRefHandler,\n    onBlur: function (e) {\n      return !e.relatedTarget && props.state.hiddenFocusElement.focus();\n    }\n  });\n};","map":{"version":3,"sources":["/Users/jacquelinegwynn/jacquelinegwynn-portfolio/node_modules/@silevis/reactgrid/dist/lib/Components/HiddenElement.js"],"names":["React","isBrowserSafari","HiddenElement","props","styles","state","viewportElement","clientHeight","cellMatrix","height","_a","clientWidth","scrollTop","scrollLeft","_b","cellMatrixHeight","cellMatrixWidth","width","position","zIndex","top","left","createElement","className","style","readOnly","ref","hiddenElementRefHandler","onBlur","e","relatedTarget","hiddenFocusElement","focus"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAO,IAAIC,aAAa,GAAG,UAAUC,KAAV,EAAiB;AACxC,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAIH,eAAe,MAAME,KAAK,CAACE,KAAN,CAAYC,eAAjC,IAAoDH,KAAK,CAACE,KAAN,CAAYC,eAAZ,CAA4BC,YAA5B,KAA6CJ,KAAK,CAACE,KAAN,CAAYG,UAAZ,CAAuBC,MAA5H,EAAoI;AAChI,QAAIC,EAAE,GAAGP,KAAK,CAACE,KAAN,CAAYC,eAArB;AAAA,QAAsCC,YAAY,GAAGG,EAAE,CAACH,YAAxD;AAAA,QAAsEI,WAAW,GAAGD,EAAE,CAACC,WAAvF;AAAA,QAAoGC,SAAS,GAAGF,EAAE,CAACE,SAAnH;AAAA,QAA8HC,UAAU,GAAGH,EAAE,CAACG,UAA9I;AACA,QAAIC,EAAE,GAAGX,KAAK,CAACE,KAAN,CAAYG,UAArB;AAAA,QAAiCO,gBAAgB,GAAGD,EAAE,CAACL,MAAvD;AAAA,QAA+DO,eAAe,GAAGF,EAAE,CAACG,KAApF;AACAb,IAAAA,MAAM,GAAG;AACLc,MAAAA,QAAQ,EAAE,UADL;AAELT,MAAAA,MAAM,EAAEF,YAFH;AAGLU,MAAAA,KAAK,EAAEN,WAHF;AAILQ,MAAAA,MAAM,EAAE,CAAC,CAJJ;AAKLC,MAAAA,GAAG,EAAGR,SAAS,GAAGL,YAAZ,GAA2BQ,gBAA5B,GAAgDA,gBAAgB,GAAGR,YAAnE,GAAkFK,SALlF;AAMLS,MAAAA,IAAI,EAAGR,UAAU,GAAGF,WAAb,GAA2BK,eAA5B,GAA+CA,eAAe,GAAGL,WAAjE,GAA+EE;AANhF,KAAT;AAQH;;AACD,SAAOb,KAAK,CAACsB,aAAN,CAAoB,OAApB,EAA6B;AAAEC,IAAAA,SAAS,EAAE,mBAAb;AAAkCC,IAAAA,KAAK,EAAEpB,MAAzC;AAAiDqB,IAAAA,QAAQ,EAAE,IAA3D;AAAiEC,IAAAA,GAAG,EAAEvB,KAAK,CAACwB,uBAA5E;AAAqGC,IAAAA,MAAM,EAAE,UAAUC,CAAV,EAAa;AAAE,aAAO,CAACA,CAAC,CAACC,aAAH,IAAoB3B,KAAK,CAACE,KAAN,CAAY0B,kBAAZ,CAA+BC,KAA/B,EAA3B;AAAoE;AAAhM,GAA7B,CAAP;AACH,CAfM","sourcesContent":["import * as React from 'react';\nimport { isBrowserSafari } from '../Functions/safari';\nexport var HiddenElement = function (props) {\n    var styles = {};\n    if (isBrowserSafari() && props.state.viewportElement && props.state.viewportElement.clientHeight !== props.state.cellMatrix.height) {\n        var _a = props.state.viewportElement, clientHeight = _a.clientHeight, clientWidth = _a.clientWidth, scrollTop = _a.scrollTop, scrollLeft = _a.scrollLeft;\n        var _b = props.state.cellMatrix, cellMatrixHeight = _b.height, cellMatrixWidth = _b.width;\n        styles = {\n            position: 'absolute',\n            height: clientHeight,\n            width: clientWidth,\n            zIndex: -1,\n            top: (scrollTop + clientHeight > cellMatrixHeight) ? cellMatrixHeight - clientHeight : scrollTop,\n            left: (scrollLeft + clientWidth > cellMatrixWidth) ? cellMatrixWidth - clientWidth : scrollLeft,\n        };\n    }\n    return React.createElement(\"input\", { className: \"rg-hidden-element\", style: styles, readOnly: true, ref: props.hiddenElementRefHandler, onBlur: function (e) { return !e.relatedTarget && props.state.hiddenFocusElement.focus(); } });\n};\n"]},"metadata":{},"sourceType":"module"}