{"ast":null,"code":"var Range = function () {\n  function Range(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.first = {\n      row: this.rows[0],\n      column: this.columns[0]\n    };\n    this.last = {\n      row: this.rows[this.rows.length - 1],\n      column: this.columns[this.columns.length - 1]\n    };\n    this.height = this.rows.map(function (c) {\n      return c.height;\n    }).reduce(function (a, b) {\n      return a + b;\n    }, 0);\n    this.width = this.columns.map(function (c) {\n      return c.width;\n    }).reduce(function (a, b) {\n      return a + b;\n    }, 0);\n  }\n\n  Range.prototype.contains = function (location) {\n    return location.column.idx >= this.first.column.idx && location.column.idx <= this.last.column.idx && location.row.idx >= this.first.row.idx && location.row.idx <= this.last.row.idx;\n  };\n\n  Range.prototype.containsRange = function (range) {\n    return range.first.column.idx >= this.first.column.idx && range.first.row.idx >= this.first.row.idx && range.last.column.idx <= this.last.column.idx && range.last.row.idx <= this.last.row.idx;\n  };\n\n  Range.prototype.intersectsWith = function (range) {\n    return range.first.column.idx <= this.last.column.idx && range.first.row.idx <= this.last.row.idx && range.last.column.idx >= this.first.column.idx && range.last.row.idx >= this.first.row.idx;\n  };\n\n  Range.prototype.slice = function (range, direction) {\n    var firstRow = direction === 'rows' ? range.first.row : this.first.row;\n    var firstColumn = direction === 'columns' ? range.first.column : this.first.column;\n    var lastRow = direction === 'rows' ? range.last.row : this.last.row;\n    var lastColumn = direction === 'columns' ? range.last.column : this.last.column;\n    var slicedRows = this.rows.slice(firstRow.idx - this.first.row.idx, lastRow.idx - this.first.row.idx + 1);\n    var slicedColumns = this.columns.slice(firstColumn.idx - this.first.column.idx, lastColumn.idx - this.first.column.idx + 1);\n    return new Range(slicedRows, slicedColumns);\n  };\n\n  return Range;\n}();\n\nexport { Range };","map":{"version":3,"sources":["/Users/jacquelinegwynn/jacquelinegwynn-portfolio/node_modules/@silevis/reactgrid/dist/lib/Model/Range.js"],"names":["Range","rows","columns","first","row","column","last","length","height","map","c","reduce","a","b","width","prototype","contains","location","idx","containsRange","range","intersectsWith","slice","direction","firstRow","firstColumn","lastRow","lastColumn","slicedRows","slicedColumns"],"mappings":"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","sourcesContent":["var Range = (function () {\n    function Range(rows, columns) {\n        this.rows = rows;\n        this.columns = columns;\n        this.first = { row: this.rows[0], column: this.columns[0] };\n        this.last = { row: this.rows[this.rows.length - 1], column: this.columns[this.columns.length - 1] };\n        this.height = this.rows.map(function (c) { return c.height; }).reduce(function (a, b) { return a + b; }, 0);\n        this.width = this.columns.map(function (c) { return c.width; }).reduce(function (a, b) { return a + b; }, 0);\n    }\n    Range.prototype.contains = function (location) {\n        return location.column.idx >= this.first.column.idx &&\n            location.column.idx <= this.last.column.idx &&\n            location.row.idx >= this.first.row.idx &&\n            location.row.idx <= this.last.row.idx;\n    };\n    Range.prototype.containsRange = function (range) {\n        return range.first.column.idx >= this.first.column.idx &&\n            range.first.row.idx >= this.first.row.idx &&\n            range.last.column.idx <= this.last.column.idx &&\n            range.last.row.idx <= this.last.row.idx;\n    };\n    Range.prototype.intersectsWith = function (range) {\n        return range.first.column.idx <= this.last.column.idx &&\n            range.first.row.idx <= this.last.row.idx &&\n            range.last.column.idx >= this.first.column.idx &&\n            range.last.row.idx >= this.first.row.idx;\n    };\n    Range.prototype.slice = function (range, direction) {\n        var firstRow = direction === 'rows' ? range.first.row : this.first.row;\n        var firstColumn = direction === 'columns' ? range.first.column : this.first.column;\n        var lastRow = direction === 'rows' ? range.last.row : this.last.row;\n        var lastColumn = direction === 'columns' ? range.last.column : this.last.column;\n        var slicedRows = this.rows.slice(firstRow.idx - this.first.row.idx, lastRow.idx - this.first.row.idx + 1);\n        var slicedColumns = this.columns.slice(firstColumn.idx - this.first.column.idx, lastColumn.idx - this.first.column.idx + 1);\n        return new Range(slicedRows, slicedColumns);\n    };\n    return Range;\n}());\nexport { Range };\n"]},"metadata":{},"sourceType":"module"}