{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { keyCodes } from '../Functions';\nimport { isNavigationKey, isAlphaNumericKey } from './keyCodeCheckings';\nimport { getCellProperty } from '..';\nimport { getCharFromKeyCode } from './getCharFromKeyCode';\n\nvar GroupCellTemplate = function () {\n  function GroupCellTemplate() {}\n\n  GroupCellTemplate.prototype.getCompatibleCell = function (uncertainCell) {\n    var text = getCellProperty(uncertainCell, 'text', 'string');\n    var isExpanded;\n\n    try {\n      isExpanded = getCellProperty(uncertainCell, 'isExpanded', 'boolean');\n    } catch (_a) {\n      isExpanded = true;\n    }\n\n    var indent;\n\n    try {\n      indent = getCellProperty(uncertainCell, 'indent', 'number');\n    } catch (_b) {\n      indent = 0;\n    }\n\n    var hasChildrens;\n\n    try {\n      hasChildrens = getCellProperty(uncertainCell, 'hasChildrens', 'boolean');\n    } catch (_c) {\n      hasChildrens = false;\n    }\n\n    var value = parseFloat(text);\n    return __assign({}, uncertainCell, {\n      text: text,\n      value: value,\n      isExpanded: isExpanded,\n      hasChildrens: hasChildrens,\n      indent: indent\n    });\n  };\n\n  GroupCellTemplate.prototype.update = function (cell, cellToMerge) {\n    return this.getCompatibleCell(__assign({}, cell, {\n      isExpanded: cellToMerge.isExpanded,\n      text: cellToMerge.text\n    }));\n  };\n\n  GroupCellTemplate.prototype.handleKeyDown = function (cell, keyCode, ctrl, shift, alt) {\n    var enableEditMode = keyCode === keyCodes.POINTER || keyCode === keyCodes.ENTER;\n\n    var cellCopy = __assign({}, cell);\n\n    var char = getCharFromKeyCode(keyCode, shift);\n\n    if (keyCode === keyCodes.SPACE && cellCopy.isExpanded !== undefined) {\n      cellCopy.isExpanded = !cellCopy.isExpanded;\n    } else if (!ctrl && !alt && isAlphaNumericKey(keyCode)) {\n      cellCopy.text = !shift ? char.toLowerCase() : char;\n      enableEditMode = true;\n    }\n\n    return {\n      cell: cellCopy,\n      enableEditMode: enableEditMode\n    };\n  };\n\n  GroupCellTemplate.prototype.getClassName = function (cell, isInEditMode) {\n    var isExpanded = cell.hasChildrens ? cell.isExpanded ? 'expanded' : 'collapsed' : '';\n    var className = cell.className ? cell.className : '';\n    return isExpanded + \" \" + className;\n  };\n\n  GroupCellTemplate.prototype.getStyle = function (cell, isInEditMode) {\n    var indent = cell.indent ? cell.indent : 0;\n    var elementMarginMultiplier = indent * 1.4;\n    return {\n      paddingLeft: \"calc(\" + elementMarginMultiplier + \"em + 2px)\"\n    };\n  };\n\n  GroupCellTemplate.prototype.render = function (cell, isInEditMode, onCellChanged) {\n    var _this = this;\n\n    return !isInEditMode ? React.createElement(React.Fragment, null, cell.hasChildrens && React.createElement(\"div\", {\n      className: \"chevron\",\n      onPointerDown: function (e) {\n        e.stopPropagation();\n        onCellChanged(_this.getCompatibleCell(__assign({}, cell, {\n          isExpanded: !cell.isExpanded\n        })), true);\n      }\n    }, React.createElement(\"span\", {\n      className: \"icon\"\n    }, \"\\u276F\")), cell.text) : React.createElement(\"input\", {\n      ref: function (input) {\n        if (input) {\n          input.focus();\n          input.setSelectionRange(input.value.length, input.value.length);\n        }\n      },\n      defaultValue: cell.text,\n      onChange: function (e) {\n        return onCellChanged(_this.getCompatibleCell(__assign({}, cell, {\n          text: e.currentTarget.value\n        })), false);\n      },\n      onBlur: function (e) {\n        return onCellChanged(_this.getCompatibleCell(__assign({}, cell, {\n          text: e.currentTarget.value\n        })), true);\n      },\n      onCopy: function (e) {\n        return e.stopPropagation();\n      },\n      onCut: function (e) {\n        return e.stopPropagation();\n      },\n      onPaste: function (e) {\n        return e.stopPropagation();\n      },\n      onPointerDown: function (e) {\n        return e.stopPropagation();\n      },\n      onKeyDown: function (e) {\n        if (isAlphaNumericKey(e.keyCode) || isNavigationKey(e.keyCode)) e.stopPropagation();\n      }\n    });\n  };\n\n  return GroupCellTemplate;\n}();\n\nexport { GroupCellTemplate };","map":{"version":3,"sources":["/Users/jacquelinegwynn/jacquelinegwynn-portfolio/node_modules/@silevis/reactgrid/dist/lib/CellTemplates/GroupCellTemplate.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","keyCodes","isNavigationKey","isAlphaNumericKey","getCellProperty","getCharFromKeyCode","GroupCellTemplate","getCompatibleCell","uncertainCell","text","isExpanded","_a","indent","_b","hasChildrens","_c","value","parseFloat","update","cell","cellToMerge","handleKeyDown","keyCode","ctrl","shift","alt","enableEditMode","POINTER","ENTER","cellCopy","char","SPACE","undefined","toLowerCase","getClassName","isInEditMode","className","getStyle","elementMarginMultiplier","paddingLeft","render","onCellChanged","_this","createElement","Fragment","onPointerDown","e","stopPropagation","ref","input","focus","setSelectionRange","defaultValue","onChange","currentTarget","onBlur","onCopy","onCut","onPaste","onKeyDown"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKO,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,oBAAnD;AACA,SAASC,eAAT,QAAgC,IAAhC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;;AACA,IAAIC,iBAAiB,GAAI,YAAY;AACjC,WAASA,iBAAT,GAA6B,CAC5B;;AACDA,EAAAA,iBAAiB,CAACV,SAAlB,CAA4BW,iBAA5B,GAAgD,UAAUC,aAAV,EAAyB;AACrE,QAAIC,IAAI,GAAGL,eAAe,CAACI,aAAD,EAAgB,MAAhB,EAAwB,QAAxB,CAA1B;AACA,QAAIE,UAAJ;;AACA,QAAI;AACAA,MAAAA,UAAU,GAAGN,eAAe,CAACI,aAAD,EAAgB,YAAhB,EAA8B,SAA9B,CAA5B;AACH,KAFD,CAGA,OAAOG,EAAP,EAAW;AACPD,MAAAA,UAAU,GAAG,IAAb;AACH;;AACD,QAAIE,MAAJ;;AACA,QAAI;AACAA,MAAAA,MAAM,GAAGR,eAAe,CAACI,aAAD,EAAgB,QAAhB,EAA0B,QAA1B,CAAxB;AACH,KAFD,CAGA,OAAOK,EAAP,EAAW;AACPD,MAAAA,MAAM,GAAG,CAAT;AACH;;AACD,QAAIE,YAAJ;;AACA,QAAI;AACAA,MAAAA,YAAY,GAAGV,eAAe,CAACI,aAAD,EAAgB,cAAhB,EAAgC,SAAhC,CAA9B;AACH,KAFD,CAGA,OAAOO,EAAP,EAAW;AACPD,MAAAA,YAAY,GAAG,KAAf;AACH;;AACD,QAAIE,KAAK,GAAGC,UAAU,CAACR,IAAD,CAAtB;AACA,WAAOvB,QAAQ,CAAC,EAAD,EAAKsB,aAAL,EAAoB;AAAEC,MAAAA,IAAI,EAAEA,IAAR;AAAcO,MAAAA,KAAK,EAAEA,KAArB;AAA4BN,MAAAA,UAAU,EAAEA,UAAxC;AAAoDI,MAAAA,YAAY,EAAEA,YAAlE;AAAgFF,MAAAA,MAAM,EAAEA;AAAxF,KAApB,CAAf;AACH,GAzBD;;AA0BAN,EAAAA,iBAAiB,CAACV,SAAlB,CAA4BsB,MAA5B,GAAqC,UAAUC,IAAV,EAAgBC,WAAhB,EAA6B;AAC9D,WAAO,KAAKb,iBAAL,CAAuBrB,QAAQ,CAAC,EAAD,EAAKiC,IAAL,EAAW;AAAET,MAAAA,UAAU,EAAEU,WAAW,CAACV,UAA1B;AAAsCD,MAAAA,IAAI,EAAEW,WAAW,CAACX;AAAxD,KAAX,CAA/B,CAAP;AACH,GAFD;;AAGAH,EAAAA,iBAAiB,CAACV,SAAlB,CAA4ByB,aAA5B,GAA4C,UAAUF,IAAV,EAAgBG,OAAhB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,GAAtC,EAA2C;AACnF,QAAIC,cAAc,GAAGJ,OAAO,KAAKrB,QAAQ,CAAC0B,OAArB,IAAgCL,OAAO,KAAKrB,QAAQ,CAAC2B,KAA1E;;AACA,QAAIC,QAAQ,GAAG3C,QAAQ,CAAC,EAAD,EAAKiC,IAAL,CAAvB;;AACA,QAAIW,IAAI,GAAGzB,kBAAkB,CAACiB,OAAD,EAAUE,KAAV,CAA7B;;AACA,QAAIF,OAAO,KAAKrB,QAAQ,CAAC8B,KAArB,IAA8BF,QAAQ,CAACnB,UAAT,KAAwBsB,SAA1D,EAAqE;AACjEH,MAAAA,QAAQ,CAACnB,UAAT,GAAsB,CAACmB,QAAQ,CAACnB,UAAhC;AACH,KAFD,MAGK,IAAI,CAACa,IAAD,IAAS,CAACE,GAAV,IAAiBtB,iBAAiB,CAACmB,OAAD,CAAtC,EAAiD;AAClDO,MAAAA,QAAQ,CAACpB,IAAT,GAAgB,CAACe,KAAD,GAASM,IAAI,CAACG,WAAL,EAAT,GAA8BH,IAA9C;AACAJ,MAAAA,cAAc,GAAG,IAAjB;AACH;;AACD,WAAO;AAAEP,MAAAA,IAAI,EAAEU,QAAR;AAAkBH,MAAAA,cAAc,EAAEA;AAAlC,KAAP;AACH,GAZD;;AAaApB,EAAAA,iBAAiB,CAACV,SAAlB,CAA4BsC,YAA5B,GAA2C,UAAUf,IAAV,EAAgBgB,YAAhB,EAA8B;AACrE,QAAIzB,UAAU,GAAGS,IAAI,CAACL,YAAL,GAAoBK,IAAI,CAACT,UAAL,GAAkB,UAAlB,GAA+B,WAAnD,GAAiE,EAAlF;AACA,QAAI0B,SAAS,GAAGjB,IAAI,CAACiB,SAAL,GAAiBjB,IAAI,CAACiB,SAAtB,GAAkC,EAAlD;AACA,WAAO1B,UAAU,GAAG,GAAb,GAAmB0B,SAA1B;AACH,GAJD;;AAKA9B,EAAAA,iBAAiB,CAACV,SAAlB,CAA4ByC,QAA5B,GAAuC,UAAUlB,IAAV,EAAgBgB,YAAhB,EAA8B;AACjE,QAAIvB,MAAM,GAAGO,IAAI,CAACP,MAAL,GAAcO,IAAI,CAACP,MAAnB,GAA4B,CAAzC;AACA,QAAI0B,uBAAuB,GAAG1B,MAAM,GAAG,GAAvC;AACA,WAAO;AAAE2B,MAAAA,WAAW,EAAE,UAAUD,uBAAV,GAAoC;AAAnD,KAAP;AACH,GAJD;;AAKAhC,EAAAA,iBAAiB,CAACV,SAAlB,CAA4B4C,MAA5B,GAAqC,UAAUrB,IAAV,EAAgBgB,YAAhB,EAA8BM,aAA9B,EAA6C;AAC9E,QAAIC,KAAK,GAAG,IAAZ;;AACA,WAAQ,CAACP,YAAD,GACJnC,KAAK,CAAC2C,aAAN,CAAoB3C,KAAK,CAAC4C,QAA1B,EAAoC,IAApC,EACIzB,IAAI,CAACL,YAAL,IACId,KAAK,CAAC2C,aAAN,CAAoB,KAApB,EAA2B;AAAEP,MAAAA,SAAS,EAAE,SAAb;AAAwBS,MAAAA,aAAa,EAAE,UAAUC,CAAV,EAAa;AACvEA,QAAAA,CAAC,CAACC,eAAF;AACAN,QAAAA,aAAa,CAACC,KAAK,CAACnC,iBAAN,CAAwBrB,QAAQ,CAAC,EAAD,EAAKiC,IAAL,EAAW;AAAET,UAAAA,UAAU,EAAE,CAACS,IAAI,CAACT;AAApB,SAAX,CAAhC,CAAD,EAAgF,IAAhF,CAAb;AACH;AAHsB,KAA3B,EAIIV,KAAK,CAAC2C,aAAN,CAAoB,MAApB,EAA4B;AAAEP,MAAAA,SAAS,EAAE;AAAb,KAA5B,EAAmD,QAAnD,CAJJ,CAFR,EAOIjB,IAAI,CAACV,IAPT,CADI,GAUAT,KAAK,CAAC2C,aAAN,CAAoB,OAApB,EAA6B;AAAEK,MAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAC7C,YAAIA,KAAJ,EAAW;AACPA,UAAAA,KAAK,CAACC,KAAN;AACAD,UAAAA,KAAK,CAACE,iBAAN,CAAwBF,KAAK,CAACjC,KAAN,CAAYtB,MAApC,EAA4CuD,KAAK,CAACjC,KAAN,CAAYtB,MAAxD;AACH;AACJ,OALwB;AAKtB0D,MAAAA,YAAY,EAAEjC,IAAI,CAACV,IALG;AAKG4C,MAAAA,QAAQ,EAAE,UAAUP,CAAV,EAAa;AAAE,eAAOL,aAAa,CAACC,KAAK,CAACnC,iBAAN,CAAwBrB,QAAQ,CAAC,EAAD,EAAKiC,IAAL,EAAW;AAAEV,UAAAA,IAAI,EAAEqC,CAAC,CAACQ,aAAF,CAAgBtC;AAAxB,SAAX,CAAhC,CAAD,EAA+E,KAA/E,CAApB;AAA4G,OALxI;AAK0IuC,MAAAA,MAAM,EAAE,UAAUT,CAAV,EAAa;AAAE,eAAOL,aAAa,CAACC,KAAK,CAACnC,iBAAN,CAAwBrB,QAAQ,CAAC,EAAD,EAAKiC,IAAL,EAAW;AAAEV,UAAAA,IAAI,EAAEqC,CAAC,CAACQ,aAAF,CAAgBtC;AAAxB,SAAX,CAAhC,CAAD,EAA+E,IAA/E,CAApB;AAA2G,OAL5Q;AAK8QwC,MAAAA,MAAM,EAAE,UAAUV,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACC,eAAF,EAAP;AAA6B,OALlU;AAKoUU,MAAAA,KAAK,EAAE,UAAUX,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACC,eAAF,EAAP;AAA6B,OALvX;AAKyXW,MAAAA,OAAO,EAAE,UAAUZ,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACC,eAAF,EAAP;AAA6B,OAL9a;AAKgbF,MAAAA,aAAa,EAAE,UAAUC,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACC,eAAF,EAAP;AAA6B,OAL3e;AAK6eY,MAAAA,SAAS,EAAE,UAAUb,CAAV,EAAa;AAC1hB,YAAI3C,iBAAiB,CAAC2C,CAAC,CAACxB,OAAH,CAAjB,IAAiCpB,eAAe,CAAC4C,CAAC,CAACxB,OAAH,CAApD,EACIwB,CAAC,CAACC,eAAF;AACP;AARwB,KAA7B,CAVR;AAmBH,GArBD;;AAsBA,SAAOzC,iBAAP;AACH,CA9EwB,EAAzB;;AA+EA,SAASA,iBAAT","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { keyCodes } from '../Functions';\nimport { isNavigationKey, isAlphaNumericKey } from './keyCodeCheckings';\nimport { getCellProperty } from '..';\nimport { getCharFromKeyCode } from './getCharFromKeyCode';\nvar GroupCellTemplate = (function () {\n    function GroupCellTemplate() {\n    }\n    GroupCellTemplate.prototype.getCompatibleCell = function (uncertainCell) {\n        var text = getCellProperty(uncertainCell, 'text', 'string');\n        var isExpanded;\n        try {\n            isExpanded = getCellProperty(uncertainCell, 'isExpanded', 'boolean');\n        }\n        catch (_a) {\n            isExpanded = true;\n        }\n        var indent;\n        try {\n            indent = getCellProperty(uncertainCell, 'indent', 'number');\n        }\n        catch (_b) {\n            indent = 0;\n        }\n        var hasChildrens;\n        try {\n            hasChildrens = getCellProperty(uncertainCell, 'hasChildrens', 'boolean');\n        }\n        catch (_c) {\n            hasChildrens = false;\n        }\n        var value = parseFloat(text);\n        return __assign({}, uncertainCell, { text: text, value: value, isExpanded: isExpanded, hasChildrens: hasChildrens, indent: indent });\n    };\n    GroupCellTemplate.prototype.update = function (cell, cellToMerge) {\n        return this.getCompatibleCell(__assign({}, cell, { isExpanded: cellToMerge.isExpanded, text: cellToMerge.text }));\n    };\n    GroupCellTemplate.prototype.handleKeyDown = function (cell, keyCode, ctrl, shift, alt) {\n        var enableEditMode = keyCode === keyCodes.POINTER || keyCode === keyCodes.ENTER;\n        var cellCopy = __assign({}, cell);\n        var char = getCharFromKeyCode(keyCode, shift);\n        if (keyCode === keyCodes.SPACE && cellCopy.isExpanded !== undefined) {\n            cellCopy.isExpanded = !cellCopy.isExpanded;\n        }\n        else if (!ctrl && !alt && isAlphaNumericKey(keyCode)) {\n            cellCopy.text = !shift ? char.toLowerCase() : char;\n            enableEditMode = true;\n        }\n        return { cell: cellCopy, enableEditMode: enableEditMode };\n    };\n    GroupCellTemplate.prototype.getClassName = function (cell, isInEditMode) {\n        var isExpanded = cell.hasChildrens ? cell.isExpanded ? 'expanded' : 'collapsed' : '';\n        var className = cell.className ? cell.className : '';\n        return isExpanded + \" \" + className;\n    };\n    GroupCellTemplate.prototype.getStyle = function (cell, isInEditMode) {\n        var indent = cell.indent ? cell.indent : 0;\n        var elementMarginMultiplier = indent * 1.4;\n        return { paddingLeft: \"calc(\" + elementMarginMultiplier + \"em + 2px)\" };\n    };\n    GroupCellTemplate.prototype.render = function (cell, isInEditMode, onCellChanged) {\n        var _this = this;\n        return (!isInEditMode ?\n            React.createElement(React.Fragment, null,\n                cell.hasChildrens &&\n                    React.createElement(\"div\", { className: \"chevron\", onPointerDown: function (e) {\n                            e.stopPropagation();\n                            onCellChanged(_this.getCompatibleCell(__assign({}, cell, { isExpanded: !cell.isExpanded })), true);\n                        } },\n                        React.createElement(\"span\", { className: \"icon\" }, \"\\u276F\")),\n                cell.text)\n            :\n                React.createElement(\"input\", { ref: function (input) {\n                        if (input) {\n                            input.focus();\n                            input.setSelectionRange(input.value.length, input.value.length);\n                        }\n                    }, defaultValue: cell.text, onChange: function (e) { return onCellChanged(_this.getCompatibleCell(__assign({}, cell, { text: e.currentTarget.value })), false); }, onBlur: function (e) { return onCellChanged(_this.getCompatibleCell(__assign({}, cell, { text: e.currentTarget.value })), true); }, onCopy: function (e) { return e.stopPropagation(); }, onCut: function (e) { return e.stopPropagation(); }, onPaste: function (e) { return e.stopPropagation(); }, onPointerDown: function (e) { return e.stopPropagation(); }, onKeyDown: function (e) {\n                        if (isAlphaNumericKey(e.keyCode) || (isNavigationKey(e.keyCode)))\n                            e.stopPropagation();\n                    } }));\n    };\n    return GroupCellTemplate;\n}());\nexport { GroupCellTemplate };\n"]},"metadata":{},"sourceType":"module"}