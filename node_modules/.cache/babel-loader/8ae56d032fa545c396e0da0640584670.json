{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { getLocationFromClient, scrollIntoView } from '.';\nimport { DefaultBehavior } from '../Behaviors/DefaultBehavior';\nimport { areLocationsEqual } from './areLocationsEqual';\nimport { isMacOs } from './operatingSystem';\n\nvar PointerEventsController = function () {\n  function PointerEventsController(updateState) {\n    var _this = this;\n\n    this.updateState = updateState;\n    this.eventTimestamps = [0, 0];\n    this.eventLocations = [undefined, undefined];\n    this.currentIndex = 0;\n\n    this.handlePointerDown = function (event, state) {\n      state.props.onContextMenu && window.addEventListener('contextmenu', _this.handleContextMenu);\n\n      if (event.button !== 0 && event.button !== undefined) {\n        return state;\n      }\n\n      window.addEventListener('pointermove', _this.handlePointerMove);\n      window.addEventListener('pointerup', _this.handlePointerUp);\n      window.addEventListener('pointerup', _this.handlePointerUp);\n      var previousLocation = _this.eventLocations[_this.currentIndex];\n      var currentLocation = getLocationFromClient(state, event.clientX, event.clientY);\n      _this.pointerDownLocation = currentLocation;\n      _this.currentIndex = 1 - _this.currentIndex;\n      _this.eventTimestamps[_this.currentIndex] = new Date().valueOf();\n      _this.eventLocations[_this.currentIndex] = currentLocation;\n\n      if ((event.pointerType === 'mouse' || currentLocation.row.idx === 0 || currentLocation.column.idx === 0 || areLocationsEqual(currentLocation, previousLocation) || event.pointerType === undefined) && !(event.ctrlKey && isMacOs())) {\n        state = state.currentBehavior.handlePointerDown(event, currentLocation, state);\n      }\n\n      return state;\n    };\n\n    this.handleContextMenu = function (event) {\n      _this.updateState(function (state) {\n        window.removeEventListener('pointerup', _this.handlePointerUp);\n        window.removeEventListener('pointermove', _this.handlePointerMove);\n        window.removeEventListener('contextmenu', _this.handleContextMenu);\n        var currentLocation = getLocationFromClient(state, event.clientX, event.clientY);\n        state = state.currentBehavior.handlePointerUp(event, currentLocation, state);\n        state = state.currentBehavior.handleContextMenu(event, state);\n        state.hiddenFocusElement.focus();\n        return state;\n      });\n    };\n\n    this.handlePointerMove = function (event) {\n      _this.updateState(function (state) {\n        var autoScrollDirection = state.currentBehavior.autoScrollDirection;\n        var currentLocation = getLocationFromClient(state, event.clientX, event.clientY, autoScrollDirection);\n\n        if (event.target.className !== 'reactgrid') {\n          scrollIntoView(state, currentLocation, autoScrollDirection);\n        }\n\n        state = state.currentBehavior.handlePointerMove(event, currentLocation, state);\n        var previousLocation = _this.eventLocations[_this.currentIndex];\n        _this.eventLocations[_this.currentIndex] = currentLocation;\n\n        if (!areLocationsEqual(currentLocation, previousLocation)) {\n          state = state.currentBehavior.handlePointerEnter(event, currentLocation, state);\n        }\n\n        return state;\n      });\n    };\n\n    this.handlePointerUp = function (event) {\n      if (event.button !== 0 && event.button !== undefined) return;\n\n      _this.updateState(function (state) {\n        window.removeEventListener('pointerup', _this.handlePointerUp);\n        window.removeEventListener('pointermove', _this.handlePointerMove);\n        state.props.onContextMenu && window.removeEventListener('contextmenu', _this.handleContextMenu);\n        var currentLocation = getLocationFromClient(state, event.clientX, event.clientY);\n        var currentTimestamp = new Date().valueOf();\n        var secondLastTimestamp = _this.eventTimestamps[1 - _this.currentIndex];\n        state = state.currentBehavior.handlePointerUp(event, currentLocation, state);\n\n        if (event.pointerType !== 'mouse' && areLocationsEqual(currentLocation, _this.pointerDownLocation) && event.pointerType !== undefined && currentTimestamp - _this.eventTimestamps[_this.currentIndex] < 500 && currentLocation.row.idx > 0 && currentLocation.column.idx > 0) {\n          state = state.currentBehavior.handlePointerDown(event, currentLocation, state);\n        }\n\n        state = __assign({}, state, {\n          currentBehavior: new DefaultBehavior()\n        });\n\n        if (currentTimestamp - secondLastTimestamp < 500 && areLocationsEqual(currentLocation, _this.eventLocations[0]) && areLocationsEqual(currentLocation, _this.eventLocations[1])) {\n          state = state.currentBehavior.handleDoubleClick(event, currentLocation, state);\n        }\n\n        if (event.pointerType !== 'mouse' && currentTimestamp - _this.eventTimestamps[_this.currentIndex] >= 500 && areLocationsEqual(currentLocation, _this.eventLocations[0]) && areLocationsEqual(currentLocation, _this.eventLocations[1])) {}\n\n        state.hiddenFocusElement.focus();\n        return state;\n      });\n    };\n  }\n\n  return PointerEventsController;\n}();\n\nexport { PointerEventsController };","map":{"version":3,"sources":["/Users/jacquelinegwynn/jacquelinegwynn-portfolio/node_modules/@silevis/reactgrid/dist/lib/Functions/PointerEventsController.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","getLocationFromClient","scrollIntoView","DefaultBehavior","areLocationsEqual","isMacOs","PointerEventsController","updateState","_this","eventTimestamps","eventLocations","undefined","currentIndex","handlePointerDown","event","state","props","onContextMenu","window","addEventListener","handleContextMenu","button","handlePointerMove","handlePointerUp","previousLocation","currentLocation","clientX","clientY","pointerDownLocation","Date","valueOf","pointerType","row","idx","column","ctrlKey","currentBehavior","removeEventListener","hiddenFocusElement","focus","autoScrollDirection","target","className","handlePointerEnter","currentTimestamp","secondLastTimestamp","handleDoubleClick"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { getLocationFromClient, scrollIntoView } from '.';\nimport { DefaultBehavior } from '../Behaviors/DefaultBehavior';\nimport { areLocationsEqual } from './areLocationsEqual';\nimport { isMacOs } from './operatingSystem';\nvar PointerEventsController = (function () {\n    function PointerEventsController(updateState) {\n        var _this = this;\n        this.updateState = updateState;\n        this.eventTimestamps = [0, 0];\n        this.eventLocations = [undefined, undefined];\n        this.currentIndex = 0;\n        this.handlePointerDown = function (event, state) {\n            state.props.onContextMenu && window.addEventListener('contextmenu', _this.handleContextMenu);\n            if (event.button !== 0 && event.button !== undefined) {\n                return state;\n            }\n            window.addEventListener('pointermove', _this.handlePointerMove);\n            window.addEventListener('pointerup', _this.handlePointerUp);\n            window.addEventListener('pointerup', _this.handlePointerUp);\n            var previousLocation = _this.eventLocations[_this.currentIndex];\n            var currentLocation = getLocationFromClient(state, event.clientX, event.clientY);\n            _this.pointerDownLocation = currentLocation;\n            _this.currentIndex = 1 - _this.currentIndex;\n            _this.eventTimestamps[_this.currentIndex] = new Date().valueOf();\n            _this.eventLocations[_this.currentIndex] = currentLocation;\n            if ((event.pointerType === 'mouse' || (currentLocation.row.idx === 0 || currentLocation.column.idx === 0)\n                || areLocationsEqual(currentLocation, previousLocation) || event.pointerType === undefined)\n                && !(event.ctrlKey && isMacOs())) {\n                state = state.currentBehavior.handlePointerDown(event, currentLocation, state);\n            }\n            return state;\n        };\n        this.handleContextMenu = function (event) {\n            _this.updateState(function (state) {\n                window.removeEventListener('pointerup', _this.handlePointerUp);\n                window.removeEventListener('pointermove', _this.handlePointerMove);\n                window.removeEventListener('contextmenu', _this.handleContextMenu);\n                var currentLocation = getLocationFromClient(state, event.clientX, event.clientY);\n                state = state.currentBehavior.handlePointerUp(event, currentLocation, state);\n                state = state.currentBehavior.handleContextMenu(event, state);\n                state.hiddenFocusElement.focus();\n                return state;\n            });\n        };\n        this.handlePointerMove = function (event) {\n            _this.updateState(function (state) {\n                var autoScrollDirection = state.currentBehavior.autoScrollDirection;\n                var currentLocation = getLocationFromClient(state, event.clientX, event.clientY, autoScrollDirection);\n                if ((event.target.className !== 'reactgrid')) {\n                    scrollIntoView(state, currentLocation, autoScrollDirection);\n                }\n                state = state.currentBehavior.handlePointerMove(event, currentLocation, state);\n                var previousLocation = _this.eventLocations[_this.currentIndex];\n                _this.eventLocations[_this.currentIndex] = currentLocation;\n                if (!areLocationsEqual(currentLocation, previousLocation)) {\n                    state = state.currentBehavior.handlePointerEnter(event, currentLocation, state);\n                }\n                return state;\n            });\n        };\n        this.handlePointerUp = function (event) {\n            if (event.button !== 0 && event.button !== undefined)\n                return;\n            _this.updateState(function (state) {\n                window.removeEventListener('pointerup', _this.handlePointerUp);\n                window.removeEventListener('pointermove', _this.handlePointerMove);\n                state.props.onContextMenu && window.removeEventListener('contextmenu', _this.handleContextMenu);\n                var currentLocation = getLocationFromClient(state, event.clientX, event.clientY);\n                var currentTimestamp = new Date().valueOf();\n                var secondLastTimestamp = _this.eventTimestamps[1 - _this.currentIndex];\n                state = state.currentBehavior.handlePointerUp(event, currentLocation, state);\n                if (event.pointerType !== 'mouse' &&\n                    areLocationsEqual(currentLocation, _this.pointerDownLocation) &&\n                    event.pointerType !== undefined &&\n                    currentTimestamp - _this.eventTimestamps[_this.currentIndex] < 500 &&\n                    (currentLocation.row.idx > 0 && currentLocation.column.idx > 0)) {\n                    state = state.currentBehavior.handlePointerDown(event, currentLocation, state);\n                }\n                state = __assign({}, state, { currentBehavior: new DefaultBehavior() });\n                if (currentTimestamp - secondLastTimestamp < 500 &&\n                    areLocationsEqual(currentLocation, _this.eventLocations[0]) &&\n                    areLocationsEqual(currentLocation, _this.eventLocations[1])) {\n                    state = state.currentBehavior.handleDoubleClick(event, currentLocation, state);\n                }\n                if (event.pointerType !== 'mouse' &&\n                    currentTimestamp - _this.eventTimestamps[_this.currentIndex] >= 500 &&\n                    areLocationsEqual(currentLocation, _this.eventLocations[0]) &&\n                    areLocationsEqual(currentLocation, _this.eventLocations[1])) {\n                }\n                state.hiddenFocusElement.focus();\n                return state;\n            });\n        };\n    }\n    return PointerEventsController;\n}());\nexport { PointerEventsController };\n"]},"metadata":{},"sourceType":"module"}