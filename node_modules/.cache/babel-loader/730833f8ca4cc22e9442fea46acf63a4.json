{"ast":null,"code":"import * as React from 'react';\nimport { PaneRow } from './PaneRow';\nimport { Line } from './Line';\nimport { Shadow } from './Shadow';\nimport { CellEditor } from './CellEditor';\nimport { ContextMenu } from './ContextMenu';\nimport { HiddenElement } from './HiddenElement';\nexport var DefaultGridRenderer = function (props) {\n  return React.createElement(\"div\", {\n    className: \"reactgrid\",\n    onKeyDown: props.eventHandlers.keyDownHandler,\n    onKeyUp: props.eventHandlers.keyUpHandler,\n    onPointerDown: props.eventHandlers.pointerDownHandler,\n    onPasteCapture: props.eventHandlers.pasteCaptureHandler,\n    onPaste: props.eventHandlers.pasteHandler,\n    onCopy: props.eventHandlers.copyHandler,\n    onCut: props.eventHandlers.cutHandler,\n    onScroll: props.eventHandlers.scrollHandler,\n    ref: props.eventHandlers.viewportElementRefHandler,\n    \"data-cy\": \"reactgrid-viewport\"\n  }, React.createElement(\"div\", {\n    \"data-cy\": \"rg-content\",\n    className: \"rg-content\",\n    style: {\n      width: props.state.cellMatrix.width,\n      height: props.state.cellMatrix.height\n    }\n  }, props.state.cellMatrix.frozenTopRange.height > 0 && React.createElement(PaneRow, {\n    id: 'T',\n    class: \"rg-pane-row-t\",\n    state: props.state,\n    style: {},\n    range: props.state.cellMatrix.frozenTopRange,\n    borders: {\n      bottom: true\n    },\n    zIndex: 3\n  }), props.state.cellMatrix.scrollableRange.height > 0 && props.state.cellMatrix.scrollableRange.first.column && props.state.cellMatrix.scrollableRange.first.row && props.state.cellMatrix.scrollableRange.last.row && props.state.visibleRange && props.state.visibleRange.height > 0 && React.createElement(PaneRow, {\n    id: 'M',\n    state: props.state,\n    style: {\n      height: props.state.cellMatrix.scrollableRange.height\n    },\n    range: props.state.cellMatrix.scrollableRange.slice(props.state.visibleRange, 'rows'),\n    borders: {},\n    zIndex: 0\n  }), props.state.cellMatrix.frozenBottomRange.height > 0 && props.state.cellMatrix.rows.length > 1 && React.createElement(PaneRow, {\n    id: 'B',\n    class: \"rg-pane-row-b\",\n    state: props.state,\n    style: {},\n    range: props.state.cellMatrix.frozenBottomRange,\n    borders: {\n      top: true\n    },\n    zIndex: 3\n  }), React.createElement(HiddenElement, {\n    hiddenElementRefHandler: props.eventHandlers.hiddenElementRefHandler,\n    state: props.state\n  }), React.createElement(Line, {\n    linePosition: props.state.linePosition,\n    orientation: props.state.lineOrientation,\n    cellMatrix: props.state.cellMatrix\n  }), React.createElement(Shadow, {\n    shadowPosition: props.state.shadowPosition,\n    orientation: props.state.lineOrientation,\n    cellMatrix: props.state.cellMatrix,\n    shadowSize: props.state.shadowSize,\n    cursor: props.state.shadowCursor\n  }), props.state.contextMenuPosition.top !== -1 && props.state.contextMenuPosition.left !== -1 && React.createElement(ContextMenu, {\n    state: props.state,\n    onContextMenu: function (menuOptions) {\n      return props.state.props.onContextMenu ? props.state.props.onContextMenu(props.state.selectionMode === 'row' ? props.state.selectedIds : [], props.state.selectionMode === 'column' ? props.state.selectedIds : [], props.state.selectionMode, menuOptions) : [];\n    },\n    contextMenuPosition: props.state.contextMenuPosition\n  }), props.state.currentlyEditedCell && React.createElement(CellEditor, {\n    state: props.state\n  })));\n};","map":{"version":3,"sources":["/Users/jacquelinegwynn/jacquelinegwynn-portfolio/node_modules/@silevis/reactgrid/dist/lib/Components/DefaultGridRenderer.js"],"names":["React","PaneRow","Line","Shadow","CellEditor","ContextMenu","HiddenElement","DefaultGridRenderer","props","createElement","className","onKeyDown","eventHandlers","keyDownHandler","onKeyUp","keyUpHandler","onPointerDown","pointerDownHandler","onPasteCapture","pasteCaptureHandler","onPaste","pasteHandler","onCopy","copyHandler","onCut","cutHandler","onScroll","scrollHandler","ref","viewportElementRefHandler","style","width","state","cellMatrix","height","frozenTopRange","id","class","range","borders","bottom","zIndex","scrollableRange","first","column","row","last","visibleRange","slice","frozenBottomRange","rows","length","top","hiddenElementRefHandler","linePosition","orientation","lineOrientation","shadowPosition","shadowSize","cursor","shadowCursor","contextMenuPosition","left","onContextMenu","menuOptions","selectionMode","selectedIds","currentlyEditedCell"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { PaneRow } from './PaneRow';\nimport { Line } from './Line';\nimport { Shadow } from './Shadow';\nimport { CellEditor } from './CellEditor';\nimport { ContextMenu } from './ContextMenu';\nimport { HiddenElement } from './HiddenElement';\nexport var DefaultGridRenderer = function (props) {\n    return React.createElement(\"div\", { className: \"reactgrid\", onKeyDown: props.eventHandlers.keyDownHandler, onKeyUp: props.eventHandlers.keyUpHandler, onPointerDown: props.eventHandlers.pointerDownHandler, onPasteCapture: props.eventHandlers.pasteCaptureHandler, onPaste: props.eventHandlers.pasteHandler, onCopy: props.eventHandlers.copyHandler, onCut: props.eventHandlers.cutHandler, onScroll: props.eventHandlers.scrollHandler, ref: props.eventHandlers.viewportElementRefHandler, \"data-cy\": \"reactgrid-viewport\" },\n        React.createElement(\"div\", { \"data-cy\": \"rg-content\", className: \"rg-content\", style: {\n                width: props.state.cellMatrix.width, height: props.state.cellMatrix.height\n            } },\n            props.state.cellMatrix.frozenTopRange.height > 0 &&\n                React.createElement(PaneRow, { id: 'T', class: \"rg-pane-row-t\", state: props.state, style: {}, range: props.state.cellMatrix.frozenTopRange, borders: { bottom: true }, zIndex: 3 }),\n            props.state.cellMatrix.scrollableRange.height > 0 && props.state.cellMatrix.scrollableRange.first.column &&\n                props.state.cellMatrix.scrollableRange.first.row && props.state.cellMatrix.scrollableRange.last.row &&\n                props.state.visibleRange && props.state.visibleRange.height > 0 &&\n                React.createElement(PaneRow, { id: 'M', state: props.state, style: { height: props.state.cellMatrix.scrollableRange.height }, range: props.state.cellMatrix.scrollableRange.slice(props.state.visibleRange, 'rows'), borders: {}, zIndex: 0 }),\n            props.state.cellMatrix.frozenBottomRange.height > 0 && props.state.cellMatrix.rows.length > 1 &&\n                React.createElement(PaneRow, { id: 'B', class: \"rg-pane-row-b\", state: props.state, style: {}, range: props.state.cellMatrix.frozenBottomRange, borders: { top: true }, zIndex: 3 }),\n            React.createElement(HiddenElement, { hiddenElementRefHandler: props.eventHandlers.hiddenElementRefHandler, state: props.state }),\n            React.createElement(Line, { linePosition: props.state.linePosition, orientation: props.state.lineOrientation, cellMatrix: props.state.cellMatrix }),\n            React.createElement(Shadow, { shadowPosition: props.state.shadowPosition, orientation: props.state.lineOrientation, cellMatrix: props.state.cellMatrix, shadowSize: props.state.shadowSize, cursor: props.state.shadowCursor }),\n            props.state.contextMenuPosition.top !== -1 && props.state.contextMenuPosition.left !== -1 &&\n                React.createElement(ContextMenu, { state: props.state, onContextMenu: function (menuOptions) { return props.state.props.onContextMenu\n                        ? props.state.props.onContextMenu((props.state.selectionMode === 'row') ? props.state.selectedIds : [], (props.state.selectionMode === 'column') ? props.state.selectedIds : [], props.state.selectionMode, menuOptions)\n                        : []; }, contextMenuPosition: props.state.contextMenuPosition }),\n            props.state.currentlyEditedCell && React.createElement(CellEditor, { state: props.state })));\n};\n"]},"metadata":{},"sourceType":"module"}