{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { keyCodes } from '../Functions/keyCodes';\nimport { isAlphaNumericKey, isNavigationKey } from './keyCodeCheckings';\nimport { getCellProperty } from '../Functions/getCellProperty';\nimport { getCharFromKeyCode } from './getCharFromKeyCode';\n\nvar EmailCellTemplate = function () {\n  function EmailCellTemplate() {}\n\n  EmailCellTemplate.prototype.getCompatibleCell = function (uncertainCell) {\n    var text = getCellProperty(uncertainCell, 'text', 'string');\n    var value = parseFloat(text);\n    return __assign({}, uncertainCell, {\n      text: text,\n      value: value\n    });\n  };\n\n  EmailCellTemplate.prototype.handleKeyDown = function (cell, keyCode, ctrl, shift, alt) {\n    var char = getCharFromKeyCode(keyCode, shift);\n    if (!ctrl && !alt && isAlphaNumericKey(keyCode)) return {\n      cell: __assign({}, cell, {\n        text: !shift ? char.toLowerCase() : char\n      }),\n      enableEditMode: true\n    };\n    return {\n      cell: cell,\n      enableEditMode: keyCode === keyCodes.POINTER || keyCode === keyCodes.ENTER\n    };\n  };\n\n  EmailCellTemplate.prototype.update = function (cell, cellToMerge) {\n    return this.getCompatibleCell(__assign({}, cell, {\n      text: cellToMerge.text\n    }));\n  };\n\n  EmailCellTemplate.prototype.getClassName = function (cell, isInEditMode) {\n    var isValid = cell.validator ? cell.validator(cell.text) : true;\n    return isValid ? 'valid' : 'invalid';\n  };\n\n  EmailCellTemplate.prototype.render = function (cell, isInEditMode, onCellChanged) {\n    var _this = this;\n\n    if (!isInEditMode) return cell.renderer ? cell.renderer(cell.text) : cell.text;\n    return React.createElement(\"input\", {\n      ref: function (input) {\n        if (input) input.focus();\n      },\n      onChange: function (e) {\n        return onCellChanged(_this.getCompatibleCell(__assign({}, cell, {\n          text: e.currentTarget.value\n        })), false);\n      },\n      onBlur: function (e) {\n        return onCellChanged(_this.getCompatibleCell(__assign({}, cell, {\n          text: e.currentTarget.value\n        })), true);\n      },\n      onKeyDown: function (e) {\n        if (isAlphaNumericKey(e.keyCode) || isNavigationKey(e.keyCode)) e.stopPropagation();\n      },\n      defaultValue: cell.text,\n      onCopy: function (e) {\n        return e.stopPropagation();\n      },\n      onCut: function (e) {\n        return e.stopPropagation();\n      },\n      onPaste: function (e) {\n        return e.stopPropagation();\n      },\n      onPointerDown: function (e) {\n        return e.stopPropagation();\n      }\n    });\n  };\n\n  return EmailCellTemplate;\n}();\n\nexport { EmailCellTemplate };","map":{"version":3,"sources":["/Users/jacquelinegwynn/jacquelinegwynn-portfolio/node_modules/@silevis/reactgrid/dist/lib/CellTemplates/EmailCellTemplate.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","keyCodes","isAlphaNumericKey","isNavigationKey","getCellProperty","getCharFromKeyCode","EmailCellTemplate","getCompatibleCell","uncertainCell","text","value","parseFloat","handleKeyDown","cell","keyCode","ctrl","shift","alt","char","toLowerCase","enableEditMode","POINTER","ENTER","update","cellToMerge","getClassName","isInEditMode","isValid","validator","render","onCellChanged","_this","renderer","createElement","ref","input","focus","onChange","e","currentTarget","onBlur","onKeyDown","stopPropagation","defaultValue","onCopy","onCut","onPaste","onPointerDown"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { keyCodes } from '../Functions/keyCodes';\nimport { isAlphaNumericKey, isNavigationKey } from './keyCodeCheckings';\nimport { getCellProperty } from '../Functions/getCellProperty';\nimport { getCharFromKeyCode } from './getCharFromKeyCode';\nvar EmailCellTemplate = (function () {\n    function EmailCellTemplate() {\n    }\n    EmailCellTemplate.prototype.getCompatibleCell = function (uncertainCell) {\n        var text = getCellProperty(uncertainCell, 'text', 'string');\n        var value = parseFloat(text);\n        return __assign({}, uncertainCell, { text: text, value: value });\n    };\n    EmailCellTemplate.prototype.handleKeyDown = function (cell, keyCode, ctrl, shift, alt) {\n        var char = getCharFromKeyCode(keyCode, shift);\n        if (!ctrl && !alt && isAlphaNumericKey(keyCode))\n            return { cell: __assign({}, cell, { text: !shift ? char.toLowerCase() : char }), enableEditMode: true };\n        return { cell: cell, enableEditMode: keyCode === keyCodes.POINTER || keyCode === keyCodes.ENTER };\n    };\n    EmailCellTemplate.prototype.update = function (cell, cellToMerge) {\n        return this.getCompatibleCell(__assign({}, cell, { text: cellToMerge.text }));\n    };\n    EmailCellTemplate.prototype.getClassName = function (cell, isInEditMode) {\n        var isValid = cell.validator ? cell.validator(cell.text) : true;\n        return isValid ? 'valid' : 'invalid';\n    };\n    EmailCellTemplate.prototype.render = function (cell, isInEditMode, onCellChanged) {\n        var _this = this;\n        if (!isInEditMode)\n            return cell.renderer ? cell.renderer(cell.text) : cell.text;\n        return React.createElement(\"input\", { ref: function (input) {\n                if (input)\n                    input.focus();\n            }, onChange: function (e) { return onCellChanged(_this.getCompatibleCell(__assign({}, cell, { text: e.currentTarget.value })), false); }, onBlur: function (e) { return onCellChanged(_this.getCompatibleCell(__assign({}, cell, { text: e.currentTarget.value })), true); }, onKeyDown: function (e) {\n                if (isAlphaNumericKey(e.keyCode) || (isNavigationKey(e.keyCode)))\n                    e.stopPropagation();\n            }, defaultValue: cell.text, onCopy: function (e) { return e.stopPropagation(); }, onCut: function (e) { return e.stopPropagation(); }, onPaste: function (e) { return e.stopPropagation(); }, onPointerDown: function (e) { return e.stopPropagation(); } });\n    };\n    return EmailCellTemplate;\n}());\nexport { EmailCellTemplate };\n"]},"metadata":{},"sourceType":"module"}